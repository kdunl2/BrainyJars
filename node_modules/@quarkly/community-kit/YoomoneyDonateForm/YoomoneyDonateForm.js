"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _widgets = require("@quarkly/widgets");

var _props = require("./props");

var _ComponentNotice = _interopRequireDefault(require("../ComponentNotice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var yoomoneyUrl = new URL('https://yoomoney.ru/quickpay/shop-widget');

var YoomoneyDonateForm = function YoomoneyDonateForm(_ref) {
  var account = _ref.account,
      buttonText = _ref.buttonText,
      buttonSize = _ref.buttonSize,
      buttonColor = _ref.buttonColor,
      fio = _ref.fio,
      email = _ref.email,
      phone = _ref.phone,
      address = _ref.address,
      comment = _ref.comment,
      hint = _ref.hint,
      sum = _ref.sum,
      writer = _ref.writer,
      payment = _ref.payment,
      mobilePayment = _ref.mobilePayment,
      targets = _ref.targets,
      successURL = _ref.successURL,
      props = _objectWithoutProperties(_ref, ["account", "buttonText", "buttonSize", "buttonColor", "fio", "email", "phone", "address", "comment", "hint", "sum", "writer", "payment", "mobilePayment", "targets", "successURL"]);

  var searchParams = new URLSearchParams(_objectSpread(_objectSpread(_objectSpread({
    account: account,
    successURL: successURL,
    targets: targets,
    hint: hint,
    'targets-hint': targets,
    'default-sum': sum,
    'button-text': buttonText
  }, payment && {
    'payment-type-choice': 'on'
  }), mobilePayment && {
    'mobile-payment-type-choice': 'on'
  }), {}, {
    fio: fio ? 'on' : 'off',
    email: email ? 'on' : 'off',
    phone: phone ? 'on' : 'off',
    address: address ? 'on' : 'off',
    comment: comment ? 'on' : 'off',
    writer: writer,
    quickpay: 'shop'
  }));
  var height = (0, _react.useMemo)(function () {
    var conditions = [[writer === 'seller', 7], [writer === 'buyer' && targets !== '', 12], [comment, 79], [hint, 12]];
    return conditions.reduce(function (acc, _ref2) {
      var _ref3 = _slicedToArray(_ref2, 2),
          c = _ref3[0],
          v = _ref3[1];

      return acc + (Boolean(c) && v);
    }, 215);
  }, [writer, targets, comment, hint]);
  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    width: "100%",
    height: height
  }, props), account ? /*#__PURE__*/_react["default"].createElement("iframe", {
    title: "YoomoneyDonateForm",
    src: "".concat(yoomoneyUrl, "?").concat(searchParams.toString()),
    frameBorder: "0",
    allowtransparency: "true",
    scrolling: "no",
    width: "100%",
    height: height
  }) : /*#__PURE__*/_react["default"].createElement(_ComponentNotice["default"], {
    message: "Add your wallet ID in the Props panel"
  }));
};

Object.assign(YoomoneyDonateForm, {
  title: 'YoomoneyDonate Form',
  description: {
    en: 'Form for accepting payments to YooMoney',
    ru: 'Форма для приёма платежей на кошелек Yoomoney'
  },
  propInfo: _props.propInfo,
  defaultProps: _props.defaultProps
});
var _default = YoomoneyDonateForm;
exports["default"] = _default;