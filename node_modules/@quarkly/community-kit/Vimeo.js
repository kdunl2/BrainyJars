"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactVimeo = _interopRequireDefault(require("@u-wave/react-vimeo"));

var _components = require("@quarkly/components");

var _atomize = _interopRequireDefault(require("@quarkly/atomize"));

var _ComponentNotice = _interopRequireDefault(require("./ComponentNotice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var overrides = {
  'Vimeo Content': {
    kind: 'Vimeo Content',
    props: {
      width: '100%',
      height: 'auto'
    }
  }
};
var StyledVimeo = (0, _atomize["default"])(_reactVimeo["default"])();

var Wrapper = _atomize["default"].div();

var Content = _atomize["default"].div();

var useDebounce = function useDebounce(value, timeout) {
  var _useState = (0, _react.useState)(value),
      _useState2 = _slicedToArray(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  (0, _react.useEffect)(function () {
    var handler = setTimeout(function () {
      return setState(value);
    }, timeout);
    return function () {
      return clearTimeout(handler);
    };
  }, [value, timeout]);
  return state;
};

var convertToVolume = function convertToVolume(x) {
  var v = parseFloat(x);
  if (typeof v === 'undefined') return 1;
  if (v < 0 || v > 1) return 1;
  return v;
};

var VimeoComponent = function VimeoComponent(_ref) {
  var video = _ref.video,
      width = _ref.width,
      height = _ref.height,
      volume = _ref.volume,
      start = _ref.start,
      autopause = _ref.autopause,
      autoplay = _ref.autoplay,
      showByline = _ref.showByline,
      color = _ref.color,
      controls = _ref.controls,
      loop = _ref.loop,
      showPortrait = _ref.showPortrait,
      showTitle = _ref.showTitle,
      muted = _ref.muted,
      playBackground = _ref.playBackground,
      responsive = _ref.responsive,
      props = _objectWithoutProperties(_ref, ["video", "width", "height", "volume", "start", "autopause", "autoplay", "showByline", "color", "controls", "loop", "showPortrait", "showTitle", "muted", "playBackground", "responsive"]);

  var _useOverrides = (0, _components.useOverrides)(props, overrides),
      override = _useOverrides.override,
      rest = _useOverrides.rest;

  var dStart = useDebounce(parseFloat(start), 1000);
  var key = "vimeo-".concat(video).concat(muted).concat(controls).concat(playBackground).concat(showByline).concat(dStart).concat(autoplay).concat(showTitle).concat(responsive);
  return /*#__PURE__*/_react["default"].createElement(Wrapper, _extends({
    width: width,
    height: height,
    "align-items": "center",
    "justify-content": "center",
    display: "flex"
  }, rest), /*#__PURE__*/_react["default"].createElement(Content, _extends({}, override('Vimeo Content'), {
    display: !video && 'none'
  }), video && /*#__PURE__*/_react["default"].createElement(StyledVimeo, _extends({
    key: key,
    start: dStart,
    background: playBackground,
    video: video,
    width: width,
    height: height,
    autopause: autopause,
    autoplay: autoplay,
    showByline: showByline,
    color: color,
    controls: controls,
    loop: loop,
    showPortrait: showPortrait,
    showTitle: showTitle,
    muted: muted,
    responsive: responsive,
    volume: !muted && convertToVolume(volume)
  }, props))), !video && /*#__PURE__*/_react["default"].createElement(_ComponentNotice["default"], {
    message: "Add your Video link or ID in the Props panel"
  }));
};

var propInfo = {
  video: {
    title: {
      en: 'Video link or ID',
      ru: 'Ссылка или идентификатор видео'
    },
    control: 'input',
    type: 'text',
    category: 'Video',
    weight: 1
  },
  start: {
    title: {
      en: 'Playback start time (in sec.)',
      ru: 'Начало воспроизведения (в сек.)'
    },
    control: 'input',
    category: 'Video',
    weight: 1
  },
  loop: {
    title: {
      en: 'Loop playback',
      ru: 'Зациклить воспроизведение'
    },
    control: 'checkbox',
    category: 'Video',
    weight: 1
  },
  autoplay: {
    title: {
      en: 'Auto playback',
      ru: 'Автоматическое воспроизведение'
    },
    description: {
      en: 'Automatically plays the video when the page loads',
      ru: 'Автоматическое воспроизведение видео при загрузке страницы'
    },
    control: 'checkbox',
    category: 'Player',
    weight: 1
  },
  autopause: {
    title: {
      en: 'Auto pause',
      ru: 'Автоматическая пауза'
    },
    description: {
      en: 'Automatically pause the video when playing another one',
      ru: 'Автоматически останавливать видео при воспроизведении другого'
    },
    control: 'checkbox',
    category: 'Player',
    weight: 1
  },
  controls: {
    title: {
      en: 'Show controls',
      ru: 'Показывать элементы управления'
    },
    control: 'checkbox',
    category: 'Controls',
    weight: 1
  },
  color: {
    title: {
      en: 'Controls color',
      ru: 'Цвет элементов управления'
    },
    control: 'color',
    category: 'Controls',
    weight: 1
  },
  responsive: {
    title: {
      en: 'By the width of the parent',
      ru: 'По ширине родителя'
    },
    control: 'checkbox',
    category: 'Player',
    weight: 1
  },
  showTitle: {
    title: {
      en: 'Show video title',
      ru: 'Показывать название видео'
    },
    control: 'checkbox',
    category: 'Player',
    weight: 1
  },
  showPortrait: {
    title: {
      en: 'Show video preview',
      ru: 'Показывать превью видео'
    },
    control: 'checkbox',
    category: 'Player',
    weight: 1
  },
  showByline: {
    title: {
      en: 'Show owner name',
      ru: 'Показывать имя владельца'
    },
    control: 'checkbox',
    category: 'Player',
    weight: 1
  },
  volume: {
    title: {
      en: 'Sound volume (from 0 to 1)',
      ru: 'Громкость звука (от 0 до 1)'
    },
    control: 'input',
    category: 'Video',
    weight: 1
  },
  muted: {
    title: {
      en: 'Sound off',
      ru: 'Отключить звук'
    },
    control: 'checkbox',
    category: 'Video',
    weight: 1
  },
  playBackground: {
    title: {
      en: 'Play in the background',
      ru: 'Воспроизведение в фоновом режиме'
    },
    control: 'checkbox',
    category: 'Video',
    weight: 1
  }
};
var defaultProps = {
  start: 0,
  loop: false,
  autoplay: false,
  autopause: true,
  controls: true,
  color: '#00ADEF',
  responsive: true,
  showTitle: true,
  showPortrait: true,
  showByline: true,
  volume: 1,
  muted: false,
  playBackground: false,
  width: '100%',
  height: '100%'
};
Object.assign(VimeoComponent, {
  title: '',
  description: {
    en: 'Use this component to add the Vimeo video player',
    ru: 'Компонент для встраивания видеопроигрывателя сервиса Vimeo'
  },
  propInfo: propInfo,
  defaultProps: defaultProps,
  overrides: overrides
});
var _default = VimeoComponent;
exports["default"] = _default;