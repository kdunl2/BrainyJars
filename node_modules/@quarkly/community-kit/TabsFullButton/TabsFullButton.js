"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _widgets = require("@quarkly/widgets");

var _components = require("@quarkly/components");

var _utils = require("../TabsFull/utils");

var _props = require("./props");

var _ComponentNotice = _interopRequireDefault(require("../ComponentNotice"));

var _utils2 = require("../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var TabsFullButton = function TabsFullButton(_ref) {
  var tabId = _ref.tabId,
      props = _objectWithoutProperties(_ref, ["tabId"]);

  var ref = (0, _react.useRef)();

  var _useOverrides = (0, _components.useOverrides)(props, _props.overrides),
      override = _useOverrides.override,
      children = _useOverrides.children,
      rest = _useOverrides.rest;

  var context = (0, _utils.useTabs)();

  var _ref2 = context || {},
      setTabId = _ref2.setTabId,
      currentTabId = _ref2.currentTabId,
      align = _ref2.align,
      orientation = _ref2.orientation;

  var selected = currentTabId === tabId;
  var onClick = (0, _react.useCallback)(function () {
    ref.current.scrollIntoView({
      block: 'nearest',
      behavior: 'smooth'
    });
    setTabId === null || setTabId === void 0 ? void 0 : setTabId(tabId);
  }, [setTabId, tabId]);
  var childrenIsEmpty = (0, _utils2.isEmptyChildren)(children);
  var mainStyles = (0, _react.useMemo)(function () {
    return {
      flex: align === 'full width' && '0 1 100%',
      'align-items': align === 'full width' && 'center',
      margin: orientation === 'Vertical' ? '0 0 5px 0' : '0 5px 0 0'
    };
  }, [align, orientation]);
  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    ref: ref,
    role: "tab",
    tabIndex: "-1",
    cursor: "pointer",
    display: "flex",
    "aria-selected": selected,
    onClick: onClick
  }, mainStyles, rest), context ? /*#__PURE__*/_react["default"].createElement(_widgets.Box, override('Tab', selected && "Tab :selected"), children, childrenIsEmpty && /*#__PURE__*/_react["default"].createElement(_widgets.Placeholder, {
    message: "Drop content here"
  })) : /*#__PURE__*/_react["default"].createElement(_ComponentNotice["default"], {
    message: "Place this component inside TabFullHead"
  }));
};

Object.assign(TabsFullButton, {
  title: 'TabsFullButton',
  description: {
    en: 'A tab (button) that displays the desired content when clicked. This component must be located inside the TabFullHead',
    ru: 'Вкладка (кнопка), при клике на которую показывается нужный контент. Этот компонент должен располагаться внутри TabFullHead'
  },
  propInfo: _props.propInfo,
  overrides: _props.overrides
});
var _default = TabsFullButton;
exports["default"] = _default;