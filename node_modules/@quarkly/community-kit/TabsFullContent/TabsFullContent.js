"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _widgets = require("@quarkly/widgets");

var _components = require("@quarkly/components");

var _utils = require("../TabsFull/utils");

var _ComponentNotice = _interopRequireDefault(require("../ComponentNotice"));

var _utils2 = require("../utils");

var _props = require("./props");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var TabsFullContent = function TabsFullContent(_ref) {
  var tabId = _ref.tabId,
      props = _objectWithoutProperties(_ref, ["tabId"]);

  var _useOverrides = (0, _components.useOverrides)(props, _props.overrides),
      override = _useOverrides.override,
      children = _useOverrides.children,
      rest = _useOverrides.rest;

  var context = (0, _utils.useTabs)();
  var isHidden = (context === null || context === void 0 ? void 0 : context.currentTabId) !== tabId;
  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    role: "tabpanel",
    hidden: isHidden
  }, rest), context ? /*#__PURE__*/_react["default"].createElement(_widgets.Box, override('Wrapper'), !isHidden && children, (0, _utils2.isEmptyChildren)(children) && /*#__PURE__*/_react["default"].createElement(_widgets.Placeholder, {
    message: "Drop content here"
  })) : /*#__PURE__*/_react["default"].createElement(_ComponentNotice["default"], {
    message: "Place this component inside TabFullBody"
  }));
};

Object.assign(TabsFullContent, {
  title: 'TabsFullContent',
  description: {
    en: 'A container for content that will be displayed when the desired tab is clicked. This component must be located inside TabFullBody.',
    ru: 'Контейнер для контента, который будет показываться при клике на нужную вкладку. Этот компонент должен располагаться внутри TabFullBody.'
  },
  propInfo: _props.propInfo,
  overrides: _props.overrides
});
var _default = TabsFullContent;
exports["default"] = _default;