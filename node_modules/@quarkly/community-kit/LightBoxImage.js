"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _components = require("@quarkly/components");

var _widgets = require("@quarkly/widgets");

var _scrollblock = _interopRequireDefault(require("./scrollblock"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var overrides = {
  'Wrapper user element': {
    kind: 'Box',
    props: {
      display: 'inline-block',
      cursor: 'pointer'
    }
  },
  'Wrapper user element:disabled': {
    kind: 'Box',
    props: {
      opacity: '0.6'
    }
  },
  'Wrapper user element:active': {
    kind: 'Box',
    props: {
      opacity: '1'
    }
  },
  Overlay: {
    kind: 'Box',
    props: {
      position: 'fixed',
      bottom: 0,
      right: 0,
      left: 0,
      top: 0,
      background: 'rgba(0, 0, 0, .7)',
      display: 'flex',
      'justify-content': 'center',
      'align-items': 'center'
    }
  },
  'Overlay:open': {
    kind: 'Box',
    props: {
      opacity: 1,
      'z-index': 110,
      visibility: 'visible',
      'transition-property': 'opacity, visibility, z-index',
      'transition-duration': '.7s'
    }
  },
  'Overlay:close': {
    kind: 'Box',
    props: {
      opacity: 0,
      'z-index': -1,
      visibility: 'hidden',
      'transition-property': 'opacity, visibility, z-index',
      'transition-duration': '.7s'
    }
  },
  'Lightbox image': {
    kind: 'Image',
    props: {
      margin: '0 auto',
      'max-width': '80%',
      'max-height': '80%',
      'min-height': 0,
      'min-weight': 0,
      src: 'http://placehold.it/800'
    }
  },
  'Lightbox image:open': {
    kind: 'Image',
    props: {
      opacity: 1,
      'z-index': 110,
      visibility: 'visible',
      transform: 'scale(1)',
      'transition-property': 'opacity, visibility, z-index, transform, max-height, max-width',
      'transition-duration': '.7s',
      'transition-timing-function': 'ease-in-out'
    }
  },
  'Lightbox image:close': {
    kind: 'Image',
    props: {
      opacity: 0,
      'z-index': -1,
      visibility: 'hidden',
      transform: 'scale(.9)',
      'transition-property': 'opacity, visibility, z-index, transform, max-height, max-width',
      'transition-duration': '.7s',
      'transition-timing-function': 'ease-in-out'
    }
  },
  'Lightbox image zoom:in': {
    kind: 'Image',
    props: {
      'max-width': '100%',
      'max-height': '100%',
      cursor: 'zoom-out'
    }
  },
  'Lightbox image zoom:out': {
    kind: 'Image',
    props: {
      'max-width': '80%',
      'max-height': '80%',
      cursor: 'zoom-in'
    }
  },
  'Icon close': {
    kind: 'Icon',
    props: {
      position: 'absolute',
      top: '15px',
      right: '20px',
      size: '30px',
      color: '#fff',
      cursor: 'pointer',
      'z-index': '124',
      category: 'io',
      icon: 'IoMdClose'
    }
  }
}; // Остановка слушателя для дочерих элементов

var stopEventClick = function stopEventClick(e) {
  e.stopPropagation();
  e.cancelBubble = true; // для IE
};

var getNaturalSize = function getNaturalSize(elem) {
  return {
    width: elem.naturalWidth,
    height: elem.naturalHeight
  };
};

var LightboxImage = function LightboxImage(_ref) {
  var showImageProp = _ref.showImageProp,
      offScrollProp = _ref.offScrollProp,
      offLightboxProp = _ref.offLightboxProp,
      props = _objectWithoutProperties(_ref, ["showImageProp", "offScrollProp", "offLightboxProp"]);

  var _useState = (0, _react.useState)(showImageProp),
      _useState2 = _slicedToArray(_useState, 2),
      isOpen = _useState2[0],
      setOpen = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = _slicedToArray(_useState3, 2),
      isBigSize = _useState4[0],
      setBigSize = _useState4[1];

  var _useState5 = (0, _react.useState)(false),
      _useState6 = _slicedToArray(_useState5, 2),
      isZoom = _useState6[0],
      setZoom = _useState6[1];

  var imageRef = (0, _react.useRef)();
  (0, _react.useEffect)(function () {
    setOpen(showImageProp); // В случае, когда отключаем Lighbox с помощью пропса, убираем блокировку скрола

    if (!showImageProp) {
      if (offScrollProp) _scrollblock["default"].enable();
    }
  }, [showImageProp, offScrollProp]);
  var openLightbox = (0, _react.useCallback)(function () {
    if (offLightboxProp) return;
    setOpen(true);
    if (offScrollProp) _scrollblock["default"].disable();
    var naturalSizeImage = getNaturalSize(imageRef.current);
    if (naturalSizeImage.width > window.innerWidth) setBigSize(true);
    window.addEventListener('keydown', function (e) {
      if (e.keyCode === 27) {
        setZoom(false);
        setOpen(false);
      }
    });
  }, [offLightboxProp, offScrollProp]);
  var closeLightbox = (0, _react.useCallback)(function () {
    if (offLightboxProp) return;
    setOpen(false);
    setZoom(false);
    if (offScrollProp) _scrollblock["default"].enable();
  }, [offLightboxProp, offScrollProp]); // Фукция зума

  var zoomImage = (0, _react.useCallback)(function (e) {
    stopEventClick(e);
    var naturalSizeImage = getNaturalSize(imageRef.current);
    if (naturalSizeImage.width > window.innerWidth) setZoom(!isZoom);
  }, [isZoom]);

  var _useOverrides = (0, _components.useOverrides)(props, overrides, {}),
      override = _useOverrides.override,
      children = _useOverrides.children,
      rest = _useOverrides.rest;

  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, rest, /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({}, override('Wrapper user element', "Wrapper user element".concat(offLightboxProp ? ':disabled' : ':active')), {
    onClick: openLightbox
  }), children), /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    onClick: closeLightbox
  }, override('Overlay', "Overlay".concat(isOpen ? ':open' : ':close'))), /*#__PURE__*/_react["default"].createElement(_widgets.Icon, _extends({
    onClick: closeLightbox
  }, override('Icon close'))), /*#__PURE__*/_react["default"].createElement(_widgets.Image, _extends({
    ref: imageRef,
    onClick: function onClick(e) {
      return zoomImage(e);
    }
  }, override('Lightbox image', "Lightbox image".concat(isOpen ? ':open' : ':close'), "Lightbox image zoom".concat(isZoom ? isBigSize && ':in' : isBigSize && ':out'))))));
};

var propInfo = {
  showImageProp: {
    title: 'Показать изображение',
    description: {
      ru: 'Показать полное изображение'
    },
    control: 'checkbox',
    category: 'Main',
    weight: 1
  },
  offScrollProp: {
    title: 'Отключить скролл',
    description: {
      ru: 'Отключить скролл при показе полного изображения'
    },
    control: 'checkbox',
    category: 'Main',
    weight: 1
  },
  offLightboxProp: {
    title: 'Деактивировать Lightbox',
    description: {
      ru: 'Отключить показ изображения при клике'
    },
    control: 'checkbox',
    category: 'Main',
    weight: 1
  }
};
var defaultProps = {
  showImageProp: false,
  offScrollProp: false,
  offLightboxProp: false
};
Object.assign(LightboxImage, {
  overrides: overrides,
  propInfo: propInfo,
  defaultProps: defaultProps
});
var _default = LightboxImage;
exports["default"] = _default;