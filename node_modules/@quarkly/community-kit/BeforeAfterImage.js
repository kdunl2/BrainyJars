"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _components = require("@quarkly/components");

var _widgets = require("@quarkly/widgets");

var _md = require("react-icons/md");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var overrides = {
  Label: {
    kind: 'Text',
    props: {
      margin: '0px',
      padding: '8px 6px',
      background: 'white',
      'border-radius': '4px',
      position: 'absolute',
      display: 'inline-block'
    }
  },
  'Before Label': {
    kind: 'Text',
    props: {
      children: 'Before',
      left: '10px',
      bottom: '10px'
    }
  },
  'After Label': {
    kind: 'Text',
    props: {
      children: 'After',
      right: '10px',
      bottom: '10px'
    }
  },
  Image: {
    kind: 'Image',
    props: {
      top: '0',
      left: '0',
      width: '100%',
      height: '100%',
      'object-fit': 'cover',
      position: 'absolute'
    }
  },
  'Before Image': {
    kind: 'Image',
    props: {
      src: 'https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?ixlib=rb-1.2.1&q=85&fm=jpg&crop=entropy&cs=srgb&w=2000'
    }
  },
  'After Image': {
    kind: 'Image',
    props: {
      src: 'https://images.unsplash.com/photo-1511407397940-d57f68e81203?ixlib=rb-1.2.1&q=85&fm=jpg&crop=entropy&cs=srgb&w=2000'
    }
  },
  Slider: {
    kind: 'Box',
    props: {
      width: '4px',
      'min-width': '0',
      height: '100%',
      background: 'white'
    }
  },
  Arrow: {
    kind: 'Icon',
    props: {
      size: '36px',
      category: 'md',
      color: '#FFFFFF',
      position: 'absolute',
      'z-index': '1'
    }
  },
  'Before Arrow': {
    props: {
      defaultIcon: _md.MdKeyboardArrowLeft
    }
  },
  'After Arrow': {
    props: {
      defaultIcon: _md.MdKeyboardArrowRight
    }
  }
};

var preventEvent = function preventEvent(e) {
  if (!['touchstart', 'touchend', 'touchmove'].includes(e.type)) {
    e.preventDefault();
  }
};

var imageStyles = {
  top: '0',
  left: '0',
  width: '100%',
  height: '100%',
  position: 'absolute'
};

var AspectRatioWrapper = function AspectRatioWrapper(_ref) {
  var _ref$aspectRatio = _ref.aspectRatio,
      aspectRatio = _ref$aspectRatio === void 0 ? 'none' : _ref$aspectRatio,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ["aspectRatio", "children"]);

  if (aspectRatio === 'none') {
    return /*#__PURE__*/_react["default"].createElement(_widgets.Box, props, children);
  }

  var _aspectRatio$split = aspectRatio.split(':'),
      _aspectRatio$split2 = _slicedToArray(_aspectRatio$split, 2),
      width = _aspectRatio$split2[0],
      height = _aspectRatio$split2[1];

  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    "padding-bottom": "".concat(height / width * 100, "%"),
    height: "0",
    "min-width": "0",
    "min-height": "0",
    position: "relative"
  }, props), /*#__PURE__*/_react["default"].createElement(_widgets.Box, {
    top: "0",
    right: "0",
    bottom: "0",
    left: "0",
    position: "absolute",
    overflow: "hidden"
  }, children));
};

var BeforeAfterImage = function BeforeAfterImage(_ref2) {
  var width = _ref2.width,
      height = _ref2.height,
      aspectRatio = _ref2.aspectRatio,
      activationType = _ref2.activationType,
      props = _objectWithoutProperties(_ref2, ["width", "height", "aspectRatio", "activationType"]);

  var _useOverrides = (0, _components.useOverrides)(props, overrides),
      override = _useOverrides.override,
      rest = _useOverrides.rest;

  var _useState = (0, _react.useState)(activationType !== 'onDrag'),
      _useState2 = _slicedToArray(_useState, 2),
      isDrag = _useState2[0],
      setDrag = _useState2[1];

  var _useState3 = (0, _react.useState)('50%'),
      _useState4 = _slicedToArray(_useState3, 2),
      pos = _useState4[0],
      setPos = _useState4[1];

  var isOnDrag = (0, _react.useMemo)(function () {
    return activationType === 'onDrag';
  }, [activationType]);
  var mouseDown = (0, _react.useCallback)(function (e) {
    preventEvent(e);

    if (isOnDrag) {
      setDrag(true);
    }
  }, [isOnDrag]);
  var mouseUp = (0, _react.useCallback)(function (e) {
    preventEvent(e);

    if (isOnDrag) {
      setDrag(false);
    }
  }, [isOnDrag]);
  var mouseMove = (0, _react.useCallback)(function (e) {
    preventEvent(e);
    if (isOnDrag && !isDrag) return;
    var rect = e.currentTarget.getBoundingClientRect();
    var target = e.type === 'touchmove' ? e.touches[0] : e;
    var curPos = target.clientX - rect.left;
    var newPos = Math.min(Math.max(curPos, 0), rect.width);
    setPos("".concat(newPos, "px"));
  }, [isOnDrag, isDrag]);
  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    w: "auto",
    h: "100%",
    pos: "relative",
    ov: "hidden"
  }, rest), /*#__PURE__*/_react["default"].createElement(AspectRatioWrapper, {
    aspectRatio: aspectRatio,
    onMouseDown: mouseDown,
    onMouseMove: mouseMove,
    onMouseUp: mouseUp,
    onTouchStart: mouseDown,
    onTouchMove: mouseMove,
    onTouchEnd: mouseUp
  }, /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({}, imageStyles, {
    style: {
      clipPath: "polygon(\n              0% 0%, \n              0% 100%, \n              ".concat(pos, " 100%, \n              ").concat(pos, " 0%\n            )")
    }
  }), /*#__PURE__*/_react["default"].createElement(_widgets.Image, override('Image', 'Before Image')), /*#__PURE__*/_react["default"].createElement(_widgets.Text, override('Label', 'Before Label'))), /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({}, imageStyles, {
    style: {
      clipPath: "polygon(\n              100% 0%, \n              100% 100%, \n                ".concat(pos, " 100%, \n                ").concat(pos, " 0%\n              )")
    }
  }), /*#__PURE__*/_react["default"].createElement(_widgets.Image, override('Image', 'After Image')), /*#__PURE__*/_react["default"].createElement(_widgets.Text, override('Label', 'After Label'))), /*#__PURE__*/_react["default"].createElement(_widgets.Box, {
    "min-width": "0px",
    height: "100%",
    "align-items": "center",
    "justify-content": "center",
    position: "absolute",
    display: "flex",
    style: {
      left: "calc(".concat(pos, " - ").concat(override('Slider').width, " / 2"),
      cursor: 'col-resize'
    }
  }, /*#__PURE__*/_react["default"].createElement(_widgets.Box, override('Slider')), /*#__PURE__*/_react["default"].createElement(_widgets.Icon, _extends({
    left: "-".concat(override('Arrow').size)
  }, override('Arrow', 'Before Arrow'))), /*#__PURE__*/_react["default"].createElement(_widgets.Icon, _extends({
    right: "-".concat(override('Arrow').size)
  }, override('Arrow', 'After Arrow'))))));
};

var propInfo = {
  activationType: {
    title: {
      en: 'Interaction method',
      ru: 'Способ взаимодействия'
    },
    control: 'radio-group',
    variants: [{
      title: {
        en: 'On Drag',
        ru: 'При перемещении'
      },
      value: 'onDrag'
    }, {
      title: {
        en: 'On Move',
        ru: 'При движении'
      },
      value: 'onMove'
    }],
    category: 'Main',
    weight: 1
  },
  aspectRatio: {
    title: {
      en: 'Aspect ratio',
      ru: 'Соотношение сторон'
    },
    control: 'select',
    variants: [{
      title: {
        en: 'None',
        ru: 'Не применять'
      },
      value: 'none'
    }, '16:9', '4:3', '1:1', '3:4', '9:16'],
    category: 'Main',
    weight: 1
  }
};
var defaultProps = {
  activationType: 'onDrag',
  aspectRatio: '16:9'
};
Object.assign(BeforeAfterImage, {
  title: 'BeforeAfterImage',
  description: {
    en: "This component allows you to easily identify the differences between two 'before' and 'after' images simply by moving around them",
    ru: "Компонент позволяет легко выделить различия между двумя изображениями 'до' и 'после' простым перемещением по ним"
  },
  propInfo: propInfo,
  defaultProps: defaultProps,
  overrides: overrides
});
var _default = BeforeAfterImage;
exports["default"] = _default;