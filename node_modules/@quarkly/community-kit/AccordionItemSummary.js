"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _components = require("@quarkly/components");

var _widgets = require("@quarkly/widgets");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var overrides = {
  'Accordion Summary': {
    kind: 'Box',
    props: {
      opacity: '1'
    }
  },
  'Accordion Summary :open': {
    kind: 'Box',
    props: {}
  },
  'Accordion Summary :disabled': {
    kind: 'Box',
    props: {
      'pointer-events': 'none',
      cursor: 'default',
      opacity: '.5'
    }
  },
  'Accordion Summary Icon': {
    kind: 'Icon',
    props: {
      size: '18px',
      color: '#7A869A',
      category: 'io',
      icon: 'IoIosArrowDown'
    }
  },
  'Accordion Summary Icon :open': {
    kind: 'Icon',
    props: {
      icon: 'IoIosArrowUp'
    }
  },
  'Accordion Summary Icon :disabled': {
    kind: 'Icon',
    props: {
      cursor: 'default'
    }
  }
};
var effects = {
  hover: ':hover'
};

var AccordionSummary = function AccordionSummary(_ref) {
  var idx = _ref.idx,
      open = _ref.open,
      onToggleOpen = _ref.onToggleOpen,
      disabled = _ref.disabled,
      props = _objectWithoutProperties(_ref, ["idx", "open", "onToggleOpen", "disabled"]);

  var _useOverrides = (0, _components.useOverrides)(props, overrides),
      override = _useOverrides.override,
      children = _useOverrides.children,
      rest = _useOverrides.rest;

  var onClickSummary = function onClickSummary() {
    return onToggleOpen({
      idx: idx,
      open: open,
      disabled: disabled
    });
  };

  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    padding: "16px 64px 16px 24px",
    "background-color": "#E6E5E6",
    "border-bottom": "1px solid #BEC7CC",
    "box-sizing": "border-box",
    position: "relative",
    cursor: "pointer",
    onClick: onClickSummary
  }, override('Accordion Summary', open && 'Accordion Summary :open', disabled && 'Accordion Summary :disabled'), rest), /*#__PURE__*/_react["default"].createElement(_widgets.Icon, _extends({
    top: "50%",
    right: "20px",
    "margin-top": "-12px",
    width: "24px",
    height: "24px",
    "line-height": "24px",
    position: "absolute",
    "z-index": "2"
  }, override('Accordion Summary Icon', open ? 'Accordion Summary Icon :open' : '', disabled && 'Accordion Summary Icon :disabled'))), children);
};

var _default = Object.assign(AccordionSummary, {
  overrides: overrides,
  effects: effects
});

exports["default"] = _default;