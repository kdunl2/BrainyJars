"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _atomize = _interopRequireDefault(require("@quarkly/atomize"));

var _widgets = require("@quarkly/widgets");

var _components = require("@quarkly/components");

var _props = require("./props");

var _utils = require("../utils");

var _useFormField2 = _interopRequireDefault(require("../Form/hooks/useFormField"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Input = _atomize["default"].input({
  effects: _props.effects
});

var InputComponent = function InputComponent(_ref) {
  var name = _ref.name,
      type = _ref.type,
      placeholder = _ref.placeholder,
      defaultValue = _ref.defaultValue,
      autoComplete = _ref.autoComplete,
      autoFocus = _ref.autoFocus,
      required = _ref.required,
      disabled = _ref.disabled,
      listFromProps = _ref.list,
      maxlengthFromProps = _ref.maxlength,
      pattern = _ref.pattern,
      min = _ref.min,
      max = _ref.max,
      valueFromProps = _ref.value,
      onChangeFromProps = _ref.onChange,
      props = _objectWithoutProperties(_ref, ["name", "type", "placeholder", "defaultValue", "autoComplete", "autoFocus", "required", "disabled", "list", "maxlength", "pattern", "min", "max", "value", "onChange"]);

  var _useOverrides = (0, _components.useOverrides)(props, _props.overrides),
      override = _useOverrides.override,
      rest = _useOverrides.rest;

  var id = (0, _utils.useUniqueId)();
  var maxlength = (0, _react.useMemo)(function () {
    return parseInt(maxlengthFromProps, 10);
  }, [maxlengthFromProps]);
  var list = (0, _react.useMemo)(function () {
    return listFromProps.length > 0 ? listFromProps.split(',') : [];
  }, [listFromProps]);

  var _useState = (0, _react.useState)(defaultValue !== null && defaultValue !== void 0 ? defaultValue : ''),
      _useState2 = _slicedToArray(_useState, 2),
      innerValue = _useState2[0],
      setInnerValue = _useState2[1];

  var _useFormField = (0, _useFormField2["default"])(name, {
    defaultValue: defaultValue
  }),
      valueFromContext = _useFormField.value,
      changeValue = _useFormField.changeValue,
      isInForm = _useFormField.isInForm;

  var innerOnChange = (0, _react.useCallback)(function (e) {
    setInnerValue(e.target.value);
    changeValue === null || changeValue === void 0 ? void 0 : changeValue(e.target.value);
  }, [changeValue]);
  (0, _react.useEffect)(function () {
    if (isInForm) {
      setInnerValue(valueFromContext);
    }
  }, [valueFromContext, isInForm]);
  var isControlled = valueFromProps !== undefined;
  var value = isControlled ? valueFromProps : innerValue;
  var onChange = isControlled ? onChangeFromProps : innerOnChange;
  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    display: "inline-block"
  }, rest), /*#__PURE__*/_react["default"].createElement(Input, _extends({
    name: name,
    type: type,
    placeholder: placeholder,
    value: value,
    onChange: onChange,
    required: required,
    disabled: disabled,
    pattern: pattern,
    min: min,
    max: max,
    autoFocus: autoFocus,
    autoComplete: autoComplete ? 'on' : 'off',
    list: list.length > 0 ? "datalist-for-input-".concat(id) : undefined,
    maxlength: maxlength > 0 ? maxlength : undefined
  }, override('Input'))), list.length > 0 && /*#__PURE__*/_react["default"].createElement("datalist", {
    id: "datalist-for-input-".concat(id)
  }, list.map(function (text) {
    return (
      /*#__PURE__*/
      // eslint-disable-next-line jsx-a11y/control-has-associated-label
      _react["default"].createElement("option", {
        key: text,
        value: text
      })
    );
  })));
};

Object.assign(InputComponent, {
  title: 'Input',
  description: {
    en: 'Input element',
    ru: 'Элемент Input'
  },
  effects: _props.effects,
  propInfo: _props.propInfo,
  defaultProps: _props.defaultProps,
  overrides: _props.overrides
});
var _default = InputComponent;
exports["default"] = _default;