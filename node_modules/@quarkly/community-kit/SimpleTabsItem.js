"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _atomize = _interopRequireDefault(require("@quarkly/atomize"));

var _widgets = require("@quarkly/widgets");

var _react = _interopRequireWildcard(require("react"));

var _SimpleTabsList = require("./SimpleTabsList");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var SimpleTab = function SimpleTab(_ref) {
  var index = _ref.index,
      props = _objectWithoutProperties(_ref, ["index"]);

  var ref = (0, _react.useRef)();

  var _useTabs = (0, _SimpleTabsList.useTabs)(),
      addTab = _useTabs.addTab,
      currentTab = _useTabs.currentTab,
      removeTab = _useTabs.removeTab;

  var tabId = props.tabId || props['data-qid'];
  (0, _react.useEffect)(function () {
    addTab({
      tabId: tabId,
      index: index
    });
    return function () {
      return removeTab({
        tabId: tabId,
        index: index
      });
    };
  }, [tabId, index, addTab, removeTab]);
  var isHidden = currentTab !== tabId;
  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    ref: ref,
    role: "tabpanel",
    hidden: isHidden
  }, props));
};

var propInfo = {
  tabId: {
    title: 'Tab ID',
    description: {
      en: 'The ID of the TabPanel to show when clicked.'
    },
    control: 'input'
  }
};

var _default = (0, _atomize["default"])(SimpleTab)({
  name: 'SimpleTab',
  description: {
    en: 'Контейнер для ресурсов связанных с вкладкой. Должен располагаться внутри SimpleTabs'
  },
  propInfo: propInfo
});

exports["default"] = _default;