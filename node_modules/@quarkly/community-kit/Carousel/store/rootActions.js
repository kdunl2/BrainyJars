"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clickNumb = clickNumb;
exports.setSlide = setSlide;
exports.setData = setData;

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function clickNumb(state, _ref) {
  var active = _ref.active;
  if (state.lock) return state;
  return _objectSpread(_objectSpread({}, state), {}, {
    active: active,
    position: 100 * active,
    animate: true,
    lock: false
  });
}

function setSlide(state, _ref2) {
  var active = _ref2.active,
      position = _ref2.position,
      animate = _ref2.animate,
      lock = _ref2.lock;
  return _objectSpread(_objectSpread({}, state), {}, {
    active: active,
    position: position,
    animate: animate,
    lock: lock
  });
}

function setData(state, _ref3) {
  var type = _ref3.type,
      props = _objectWithoutProperties(_ref3, ["type"]);

  return _objectSpread(_objectSpread({}, state), props);
}