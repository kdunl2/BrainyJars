"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _widgets = require("@quarkly/widgets");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var slidesWrapperList = {
  box: _widgets.Box,
  link: _widgets.Link
};

var Slide = function Slide(_ref) {
  var index = _ref.index,
      slides = _ref.slides,
      slidesWrapper = _ref.slidesWrapper,
      numb = _ref.numb,
      showHead = _ref.showHead,
      showText = _ref.showText,
      showLink = _ref.showLink,
      override = _ref.override;
  var SlideWrapper = (0, _react.useMemo)(function () {
    return slidesWrapperList[slidesWrapper];
  }, [slidesWrapper]);
  var clearOverride = (0, _react.useMemo)(function () {
    return (index === 0 || index === slides + 1) && {
      'data-qoverride': undefined
    };
  }, [index, slides]);
  var getOverride = (0, _react.useCallback)(function (name) {
    return _objectSpread(_objectSpread({}, override(name, "".concat(name, " ").concat(numb))), clearOverride);
  }, [numb, clearOverride, override]);
  return /*#__PURE__*/_react["default"].createElement(SlideWrapper, getOverride('Slide'), /*#__PURE__*/_react["default"].createElement(_widgets.Image, getOverride('Slide Image')), (showHead || showText || showLink) && /*#__PURE__*/_react["default"].createElement(_widgets.Box, getOverride('Slide Content'), showHead && /*#__PURE__*/_react["default"].createElement(_widgets.Text, getOverride('Slide Head')), showText && /*#__PURE__*/_react["default"].createElement(_widgets.Text, getOverride('Slide Text')), showLink && /*#__PURE__*/_react["default"].createElement(_widgets.Link, getOverride('Slide Link'))));
};

var _default = Slide;
exports["default"] = _default;