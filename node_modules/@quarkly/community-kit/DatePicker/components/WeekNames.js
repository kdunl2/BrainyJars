"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _atomize = _interopRequireDefault(require("@quarkly/atomize"));

var _dateFns = require("date-fns");

var _DatePicker = require("../contexts/DatePicker");

var _Override = require("../contexts/Override");

var _utils = require("../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var THead = _atomize["default"].thead();

var Tr = _atomize["default"].tr();

var Th = _atomize["default"].th();

var Abbr = _atomize["default"].abbr();

var getWeekNames = function getWeekNames(locale) {
  var firstDOW = (0, _dateFns.startOfWeek)(new Date(), {
    locale: locale
  });
  return _toConsumableArray(Array(7)).map(function (_, i) {
    var date = (0, _dateFns.addDays)(firstDOW, i);
    return {
      title: (0, _dateFns.format)(date, 'EEEE', {
        locale: locale
      }),
      "short": (0, _dateFns.format)(date, 'EEEEEE', {
        locale: locale
      })
    };
  });
};

var WeekNames = function WeekNames() {
  var override = (0, _Override.useOverride)();

  var _useDatePicker = (0, _DatePicker.useDatePicker)(),
      locale = _useDatePicker.locale;

  var names = (0, _react.useMemo)(function () {
    return getWeekNames(locale);
  }, [locale]);
  return /*#__PURE__*/_react["default"].createElement(THead, _extends({
    role: "rowgroup"
  }, override('THead')), /*#__PURE__*/_react["default"].createElement(Tr, _extends({
    role: "row"
  }, override('Tr')), names.map(function (_ref, rowIdx) {
    var title = _ref.title,
        _short = _ref["short"];
    return /*#__PURE__*/_react["default"].createElement(Th, _extends({
      key: _short
    }, override.apply(void 0, _toConsumableArray((0, _utils.getRowOverrides)('Th', {
      rowIdx: rowIdx
    })))), /*#__PURE__*/_react["default"].createElement(Abbr, _extends({
      "aria-hidden": "true",
      "text-decoration": "none",
      title: title
    }, override.apply(void 0, _toConsumableArray((0, _utils.getRowOverrides)('Abbr', {
      rowIdx: rowIdx
    })))), _short));
  })));
};

var _default = WeekNames;
exports["default"] = _default;