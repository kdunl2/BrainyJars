"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _widgets = require("@quarkly/widgets");

var _dateFns = require("date-fns");

var _MonthSelect = _interopRequireDefault(require("./MonthSelect"));

var _YearSelect = _interopRequireDefault(require("./YearSelect"));

var _Override = require("../contexts/Override");

var _DatePicker = require("../contexts/DatePicker");

var _utils = require("../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var disabledButtons = function disabledButtons(_ref) {
  var monthDate = _ref.monthDate,
      minDate = _ref.minDate,
      maxDate = _ref.maxDate;
  var prev = (0, _utils.isBeforeMY)((0, _dateFns.addMonths)(monthDate, -1), minDate);
  var next = (0, _utils.isAfterMY)((0, _dateFns.addMonths)(monthDate, 1), maxDate);
  return [prev, next];
};

var Caption = function Caption(_ref2) {
  var monthNumber = _ref2.monthNumber;
  var override = (0, _Override.useOverride)();

  var _useDatePicker = (0, _DatePicker.useDatePicker)(),
      locale = _useDatePicker.locale,
      monthDate = _useDatePicker.monthDate,
      prevMonth = _useDatePicker.prevMonth,
      nextMonth = _useDatePicker.nextMonth,
      maxDate = _useDatePicker.maxDate,
      minDate = _useDatePicker.minDate,
      numberOfMonths = _useDatePicker.numberOfMonths;

  var _disabledButtons = disabledButtons({
    monthDate: monthDate,
    minDate: minDate,
    maxDate: maxDate
  }),
      _disabledButtons2 = _slicedToArray(_disabledButtons, 2),
      prevDisabled = _disabledButtons2[0],
      nextDisabled = _disabledButtons2[1];

  var _locale$labels = locale.labels,
      prevMonthLabel = _locale$labels.prevMonthLabel,
      nextMonthLabel = _locale$labels.nextMonthLabel;
  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, override('Caption'), /*#__PURE__*/_react["default"].createElement(_widgets.Button, _extends({
    visibility: monthNumber === 0 ? 'visible' : 'hidden',
    disabled: prevDisabled,
    "aria-label": prevMonthLabel,
    onClick: prevMonth
  }, override('Caption Button', prevDisabled && 'Caption Button Disabled', 'Caption Button Back', prevDisabled && 'Caption Button Back Disabled')), /*#__PURE__*/_react["default"].createElement(_widgets.Icon, override('Caption Button Icon', prevDisabled && 'Caption Button Icon Disabled', 'Caption Button Icon Back', prevDisabled && 'Caption Button Icon Back Disabled'))), /*#__PURE__*/_react["default"].createElement(_YearSelect["default"], {
    monthNumber: monthNumber
  }), /*#__PURE__*/_react["default"].createElement(_MonthSelect["default"], {
    monthNumber: monthNumber
  }), /*#__PURE__*/_react["default"].createElement(_widgets.Button, _extends({
    visibility: monthNumber + 1 === numberOfMonths ? 'visible' : 'hidden',
    disabled: nextDisabled,
    "aria-label": nextMonthLabel,
    onClick: nextMonth
  }, override('Caption Button', nextDisabled && 'Caption Button Disabled', 'Caption Button Next', nextDisabled && 'Caption Button Next Disabled')), /*#__PURE__*/_react["default"].createElement(_widgets.Icon, override('Caption Button Icon', nextDisabled && 'Caption Button Icon Disabled', 'Caption Button Icon Next', nextDisabled && 'Caption Button Icon Next Disabled'))));
};

var _default = Caption;
exports["default"] = _default;