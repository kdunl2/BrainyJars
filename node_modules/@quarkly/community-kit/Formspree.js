"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _atomize = _interopRequireDefault(require("@quarkly/atomize"));

var _widgets = require("@quarkly/widgets");

var _context2 = require("./Form/context");

var _templateObject, _templateObject2, _templateObject3;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var NoEndPoint = _atomize["default"].div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n\tpadding: 16px 32px;\n\tborder: 2px solid;\n\tmin-width: 100px;\n"])));

var Wrapper = _atomize["default"].div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n\tmin-height: 32px;\n"])));

var Form = _atomize["default"].form(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n    min-height: 32px;\n"])));

var url = 'https://formspree.io/';

var Formspree = function Formspree(props) {
  var children = props.children,
      _props$endpoint = props.endpoint,
      endpoint = _props$endpoint === void 0 ? '' : _props$endpoint,
      errorMessage = props.errorMessage,
      completeText = props.completeText,
      rest = _objectWithoutProperties(props, ["children", "endpoint", "errorMessage", "completeText"]);

  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      complete = _useState2[0],
      setComplete = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = _slicedToArray(_useState3, 2),
      fetching = _useState4[0],
      setFetching = _useState4[1];

  var _useState5 = (0, _react.useState)('auto'),
      _useState6 = _slicedToArray(_useState5, 2),
      minHeight = _useState6[0],
      setMinHeight = _useState6[1];

  var _useState7 = (0, _react.useState)(false),
      _useState8 = _slicedToArray(_useState7, 2),
      error = _useState8[0],
      setError = _useState8[1];

  var action = url + endpoint.trim().replace(url, '');

  var onSubmit = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(event) {
      var elMinHeight, form, data, button, request;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!fetching) {
                _context.next = 2;
                break;
              }

              return _context.abrupt("return");

            case 2:
              event.preventDefault();
              elMinHeight = event.currentTarget.offsetHeight;
              setError(false);
              setFetching(true);
              form = event.target;
              data = new FormData(form);
              button = form.querySelector('[type="submit"]');
              button && button.setAttribute('disabled', true);
              request = new XMLHttpRequest();
              request.open('POST', action);
              request.setRequestHeader('Accept', 'application/json');

              request.onreadystatechange = function () {
                if (request.readyState !== XMLHttpRequest.DONE) return;

                if (request.status === 200) {
                  setMinHeight("".concat(elMinHeight, "px"));
                  setComplete(true);
                } else {
                  setError(true);
                }
              };

              request.send(data);
              setFetching(false);
              button && button.removeAttribute('disabled');

            case 17:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onSubmit(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  var _useForm = (0, _context2.useForm)(),
      reset = _useForm.reset;

  var onReset = (0, _react.useCallback)(function (e) {
    e.preventDefault();
    reset();
    setError(false);
  }, [reset]);
  (0, _react.useEffect)(function () {
    setMinHeight('auto');
  }, [children]);

  if (!endpoint || typeof endpoint !== 'string') {
    return /*#__PURE__*/_react["default"].createElement(Wrapper, rest, /*#__PURE__*/_react["default"].createElement(NoEndPoint, null, "Create a form on", ' ', /*#__PURE__*/_react["default"].createElement(_widgets.Link, {
      color: "currentColor",
      "text-decoration": "underline",
      target: "_blank",
      rel: "noopener noreferrer",
      href: "https://formspree.io/"
    }, "formspree.io"), ' ', "and fill in the ", /*#__PURE__*/_react["default"].createElement(_widgets.Strong, null, "endpoint"), " field on the", ' ', /*#__PURE__*/_react["default"].createElement(_widgets.Strong, null, "props panel")));
  }

  if (!complete) {
    return /*#__PURE__*/_react["default"].createElement(Form, _extends({}, rest, {
      encType: "multipart/form-data",
      method: "post",
      onSubmit: onSubmit,
      onReset: onReset,
      action: action
    }), children, error ? /*#__PURE__*/_react["default"].createElement(_widgets.Text, {
      font: "--primary",
      color: "--red"
    }, errorMessage) : null);
  }

  return /*#__PURE__*/_react["default"].createElement(Wrapper, _extends({}, rest, {
    "min-height": minHeight
  }), completeText);
};

var propInfo = {
  endpoint: {
    title: {
      en: 'Endpoint',
      ru: 'Endpoint'
    },
    control: 'input',
    type: 'text',
    category: 'Main',
    weight: 1
  },
  completeText: {
    title: {
      en: 'Success message',
      ru: 'Сообщение об успешной отправке'
    },
    control: 'input',
    type: 'text',
    category: 'Main',
    weight: 1
  },
  errorMessage: {
    title: {
      en: 'Error message',
      ru: 'Сообщение в случае ошибки'
    },
    control: 'input',
    type: 'text',
    category: 'Main',
    weight: 1
  }
};
var defaultProps = {
  endpoint: '',
  errorMessage: 'Something went wrong',
  completeText: 'Success'
};
var FormspreeWrapped = (0, _context2.withForm)(Formspree);
Object.assign(FormspreeWrapped, {
  title: 'Formspree',
  description: {
    en: 'This component allows you to add a form with the Formspree widget',
    ru: 'Компонент для встраивания виджета с формой сервиса Formspree'
  },
  propInfo: propInfo,
  defaultProps: defaultProps
});
var _default = FormspreeWrapped;
exports["default"] = _default;