"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _atomize = _interopRequireDefault(require("@quarkly/atomize"));

var _widgets = require("@quarkly/widgets");

var _components = require("@quarkly/components");

var _props = require("./props");

var _RadioContext = require("../RadioGroup/context/RadioContext");

var _ComponentNotice = _interopRequireDefault(require("../ComponentNotice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Label = _atomize["default"].label();

var Input = _atomize["default"].input({
  effects: _props.effects
});

var useRadio = function useRadio(valueFromProps) {
  var radioContext = (0, _RadioContext.useRadioGroup)();
  if (!radioContext) return;
  var name = radioContext.name,
      value = radioContext.value,
      required = radioContext.required,
      onRadioChange = radioContext.onRadioChange;
  return {
    name: name,
    checked: valueFromProps === value,
    onChange: onRadioChange,
    required: required
  };
};

var RadioComponent = function RadioComponent(_ref) {
  var name = _ref.name,
      value = _ref.value,
      defaultChecked = _ref.defaultChecked,
      autoFocus = _ref.autoFocus,
      disabled = _ref.disabled,
      checkedFromProps = _ref.checked,
      onChangeFromProps = _ref.onChange,
      props = _objectWithoutProperties(_ref, ["name", "value", "defaultChecked", "autoFocus", "disabled", "checked", "onChange"]);

  var _useOverrides = (0, _components.useOverrides)(props, _props.overrides),
      override = _useOverrides.override,
      rest = _useOverrides.rest;

  var radioProps = useRadio(value);

  if (!radioProps) {
    return /*#__PURE__*/_react["default"].createElement(_ComponentNotice["default"], _extends({
      message: "Place this component inside RadioGroup"
    }, rest));
  }

  var status = radioProps.checked ? ':checked' : ':unchecked';
  return /*#__PURE__*/_react["default"].createElement(Label, _extends({
    padding: "6px",
    font: "--base",
    color: "--dark",
    "align-items": "center",
    display: "inline-flex"
  }, rest), /*#__PURE__*/_react["default"].createElement(Input, _extends({
    value: value,
    autoFocus: autoFocus,
    disabled: disabled
  }, radioProps, override('Input', "Input ".concat(status)), {
    type: "radio"
  })), /*#__PURE__*/_react["default"].createElement(_widgets.Text, _extends({
    as: "span"
  }, override('Text', "Text ".concat(status)))));
};

Object.assign(RadioComponent, {
  title: 'Radio',
  description: {
    en: 'Radio element',
    ru: 'Элемент Radio'
  },
  effects: _props.effects,
  propInfo: _props.propInfo,
  defaultProps: _props.defaultProps
});
var _default = RadioComponent;
exports["default"] = _default;