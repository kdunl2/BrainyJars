"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _widgets = require("@quarkly/widgets");

var _hooks = require("./hooks");

var _props = require("./props");

var _ComponentNotice = _interopRequireDefault(require("../ComponentNotice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var testHexColor = new RegExp(/^#(?=[0-9A-F]*$)(?:.{3}|.{6})$/, 'i');

var getChrome = function getChrome(options) {
  return Object.keys(options).filter(function (key) {
    return options[key];
  }).join(' ');
};

var removeAllChildren = function removeAllChildren(node) {
  while (node.hasChildNodes()) {
    node.removeChild(node.lastChild);
  }
};

var getSource = function getSource(str) {
  if (str.includes('twitter.com')) {
    return {
      sourceType: 'url',
      url: str
    };
  }

  return {
    sourceType: 'profile',
    screenName: str.substr(str.startsWith('@'))
  };
};

var TwitterFeed = function TwitterFeed(_ref) {
  var dataProvider = _ref.dataProvider,
      noheader = _ref.noheader,
      nofooter = _ref.nofooter,
      noborders = _ref.noborders,
      transparent = _ref.transparent,
      noscrollbar = _ref.noscrollbar,
      tweetLimit = _ref.tweetLimit,
      tweetBorder = _ref.tweetBorder,
      ariaPolite = _ref.ariaPolite,
      props = _objectWithoutProperties(_ref, ["dataProvider", "noheader", "nofooter", "noborders", "transparent", "noscrollbar", "tweetLimit", "tweetBorder", "ariaPolite"]);

  var _useTwitter = (0, _hooks.useTwitter)(),
      _useTwitter2 = _slicedToArray(_useTwitter, 2),
      twitterLoad = _useTwitter2[0],
      twitterError = _useTwitter2[1];

  var ref = (0, _react.useRef)();
  var chrome = (0, _react.useMemo)(function () {
    return getChrome({
      noheader: noheader,
      nofooter: nofooter,
      noborders: noborders,
      transparent: transparent,
      noscrollbar: noscrollbar
    });
  }, [noheader, nofooter, noborders, transparent, noscrollbar]);
  var borderColor = (0, _react.useMemo)(function () {
    if (tweetBorder && testHexColor.test(tweetBorder)) {
      return tweetBorder;
    }

    return 'transparent';
  }, [tweetBorder]);
  (0, _react.useEffect)(function () {
    var refElement = ref.current;

    if (twitterLoad && !twitterError) {
      try {
        window.twttr.widgets.createTimeline(getSource(dataProvider), refElement, {
          height: '100%',
          chrome: chrome,
          tweetLimit: tweetLimit,
          borderColor: borderColor,
          ariaPolite: ariaPolite
        });
      } catch (e) {
        /*#__PURE__*/
        _react["default"].createElement(_ComponentNotice["default"], {
          message: 'An unexpected error has occurred while loading the widget'
        });
      }
    }

    return function () {
      return removeAllChildren(refElement);
    };
  }, [dataProvider, chrome, tweetLimit, borderColor, ariaPolite, twitterLoad, twitterError]);
  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    ref: ref,
    "overflow-x": "hidden",
    "overflow-y": "auto"
  }, props), twitterError && /*#__PURE__*/_react["default"].createElement(_ComponentNotice["default"], {
    message: 'An unexpected error has occurred while loading the widget'
  }));
};

var _default = Object.assign(TwitterFeed, {
  title: 'TwitterFeed',
  description: {
    en: 'TwitterFeed'
  },
  propInfo: _props.propInfo,
  defaultProps: _props.defaultProps
});

exports["default"] = _default;