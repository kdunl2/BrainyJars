"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _atomize = _interopRequireDefault(require("@quarkly/atomize"));

var _components = require("@quarkly/components");

var _widgets = require("@quarkly/widgets");

var _md = require("react-icons/md");

var _reactRouterDom = require("react-router-dom");

var _router = require("@reach/router");

var _utils = require("../utils");

var _props = require("./props");

var _utils2 = require("../Menu/utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var Ul = _atomize["default"].ul();

var Li = _atomize["default"].li();

var Sub = function Sub(_ref) {
  var common = _ref.common,
      item = _ref.item,
      other = _ref.other;
  var tabState = common.tabState,
      override = common.override;
  var id = item.id,
      name = item.name,
      pageUrl = item.pageUrl;
  var href = other.href,
      match = other.match,
      expanded = other.expanded;
  var isClickable = tabState !== 'keepExpanded';
  var isSubOpenForce = tabState === 'keepExpanded' || tabState === 'expandAll';
  var isSubCloseForce = tabState === 'collapseAll';

  var _useState = (0, _react.useState)(expanded && !isSubCloseForce || isSubOpenForce),
      _useState2 = _slicedToArray(_useState, 2),
      isSubOpen = _useState2[0],
      setSubOpen = _useState2[1];

  var onSubToggle = (0, _react.useCallback)(function () {
    setSubOpen(!isSubOpen);
  }, [isSubOpen]);
  var subOpenStatus = isSubOpen ? ':open' : ':closed';
  (0, _react.useEffect)(function () {
    var subOpenForce = tabState === 'keepExpanded' || tabState === 'expandAll';
    var subCloseForce = tabState === 'collapseAll';
    setSubOpen(expanded && !subCloseForce || subOpenForce);
  }, [tabState, expanded]);
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    padding: "6px 12px",
    "align-items": "center",
    display: "flex",
    cursor: isClickable ? 'pointer' : 'default',
    onClick: isClickable && onSubToggle
  }, override('Sub Head', "Sub Head-".concat(pageUrl), match && 'Sub Head :active', "Sub Head ".concat(subOpenStatus), {
    defaultKey: "Sub Head-".concat(pageUrl)
  })), /*#__PURE__*/_react["default"].createElement(_widgets.Text, _extends({
    margin: "0",
    "white-space": "nowrap"
  }, override('Sub Head Text', match && 'Sub Head Text :active', "Sub Head Text ".concat(subOpenStatus), "Sub Head Text-".concat(pageUrl), {
    defaultKey: "Sub Head Text-".concat(pageUrl)
  })), override("Sub Head Text-".concat(pageUrl)).children || 'Group Name'), isClickable && /*#__PURE__*/_react["default"].createElement(_widgets.Icon, _extends({
    category: "md",
    defaultIcon: _md.MdKeyboardArrowDown,
    size: "16px"
  }, override('Sub Head Icon', "Sub Head Icon-".concat(pageUrl), match && 'Sub Head Icon :active', "Sub Head Icon ".concat(subOpenStatus), {
    defaultKey: "Sub Head Icon-".concat(pageUrl)
  })))), /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    padding: "6px 12px"
  }, override('Sub Body', "Sub Body-".concat(pageUrl), match && 'Sub Body :active', "Sub Body ".concat(subOpenStatus), {
    defaultKey: "Sub Body-".concat(pageUrl)
  })), /*#__PURE__*/_react["default"].createElement(_widgets.Link, _extends({
    padding: "6px 12px",
    "white-space": "nowrap",
    display: "block",
    href: href
  }, override('Link', "Link-".concat(pageUrl), match && 'Link :active', "Link ".concat(subOpenStatus), {
    defaultKey: "Link-".concat(pageUrl)
  })), override("Link-".concat(pageUrl)).children || name), /*#__PURE__*/_react["default"].createElement(List, _extends({
    "list-style": "none",
    rootId: id
  }, common, {
    tree: item
  }, override('List', "List-".concat(pageUrl), match && 'List :active', "List ".concat(subOpenStatus), {
    defaultKey: "List-".concat(pageUrl)
  })))));
};

var Item = function Item(_ref2) {
  var _item$children;

  var common = _ref2.common,
      item = _ref2.item;

  var _getAPI = (0, _utils.getAPI)(),
      projectType = _getAPI.projectType;

  var tabState = common.tabState,
      override = common.override;
  var name = item.name,
      pageUrl = item.pageUrl;
  var hasSub = !!(item !== null && item !== void 0 && (_item$children = item.children) !== null && _item$children !== void 0 && _item$children.length);
  var expand = tabState === 'expandActive';
  var href = item.absoluteUrl;
  var match = null;
  var expanded = false; // TODO: needs to be resolved, hook inside conditional statement

  if (projectType === 'gatsby') {
    match = (0, _router.useMatch)(href) && true; // eslint-disable-line
  } else {
    match = (0, _reactRouterDom.useRouteMatch)({
      path: href,
      exact: true
    }) && true; // eslint-disable-line

    expanded = (0, _reactRouterDom.useRouteMatch)({
      path: href,
      exact: !expand
    }) && true; // eslint-disable-line
  }

  return /*#__PURE__*/_react["default"].createElement(Li, override('Item', "Item-".concat(pageUrl), match && 'Item :active', {
    defaultKey: "Item-".concat(pageUrl)
  }), hasSub ? /*#__PURE__*/_react["default"].createElement(Sub, _extends({
    common: common,
    item: item,
    other: {
      projectType: projectType,
      href: href,
      match: match,
      expanded: expanded
    }
  }, override('Sub', "Sub-".concat(pageUrl), match && 'Sub :active', {
    defaultKey: "Sub-".concat(pageUrl)
  }))) : /*#__PURE__*/_react["default"].createElement(_widgets.Link, _extends({
    padding: "6px 12px",
    "white-space": "nowrap",
    display: "block",
    href: href
  }, override('Link', "Link-".concat(pageUrl), match && 'Link :active', {
    defaultKey: "Link-".concat(pageUrl)
  })), override("Link-".concat(pageUrl)).children || name));
};

var List = function List(_ref3) {
  var _tree$children;

  var rootId = _ref3.rootId,
      tabState = _ref3.tabState,
      tree = _ref3.tree,
      override = _ref3.override,
      rest = _objectWithoutProperties(_ref3, ["rootId", "tabState", "tree", "override"]);

  var common = {
    tabState: tabState,
    override: override
  };
  var list = (_tree$children = tree === null || tree === void 0 ? void 0 : tree.children) !== null && _tree$children !== void 0 ? _tree$children : [];
  return /*#__PURE__*/_react["default"].createElement(Ul, _extends({
    padding: "0",
    "list-style": "none"
  }, rest), list.map(function (item) {
    return /*#__PURE__*/_react["default"].createElement(Item, {
      key: item.id,
      common: common,
      item: item
    });
  }));
};

var MenuWithGroups = function MenuWithGroups(_ref4) {
  var depth = _ref4.depth,
      rootId = _ref4.rootId,
      tabState = _ref4.tabState,
      filterMode = _ref4.filterMode,
      origFilterPages = _ref4.filterPages,
      props = _objectWithoutProperties(_ref4, ["depth", "rootId", "tabState", "filterMode", "filterPages"]);

  var _useOverrides = (0, _components.useOverrides)(props, _props.overrides, _props.defaultProps),
      override = _useOverrides.override,
      rest = _useOverrides.rest;

  var pages = (0, _utils.getAPI)().pages || {};
  var filterPages = (origFilterPages === null || origFilterPages === void 0 ? void 0 : origFilterPages.length) > 0 ? origFilterPages.split(',') : [];

  var tree = _utils2.PageTreeNode.fromPages(pages).findSubtreeByUrl(rootId).filterByPages(filterMode, filterPages).truncate(depth);

  return /*#__PURE__*/_react["default"].createElement(List, _extends({
    "user-select": "none",
    "flex-direction": "column",
    display: "flex",
    position: "relative",
    "z-index": "10",
    tree: tree,
    rootId: rootId,
    tabState: tabState,
    override: override
  }, rest));
};

Object.assign(MenuWithGroups, {
  title: 'Menu with groups',
  description: {
    en: 'Multi-level menu, in which subpages are combined into a named group',
    ru: 'Многоуровневое меню, в котором вложенные страницы объединяются в именованную группу'
  },
  propInfo: _props.propInfo,
  defaultProps: _props.defaultProps,
  overrides: _props.overrides
});
var _default = MenuWithGroups;
exports["default"] = _default;