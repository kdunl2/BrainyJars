"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _disqusReact = require("disqus-react");

var _components = require("@quarkly/components");

var _atomize = _interopRequireDefault(require("@quarkly/atomize"));

var _ComponentNotice = _interopRequireDefault(require("./ComponentNotice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var overrides = {
  'Disqus Content': {
    kind: 'Disqus Content',
    props: {
      width: '100%',
      height: 'auto'
    }
  }
};

var Wrapper = _atomize["default"].div();

var Content = _atomize["default"].div();

var DisqusCommentComponent = function DisqusCommentComponent(_ref) {
  var commentIDProp = _ref.commentIDProp,
      showParrent = _ref.showParrent,
      widthProp = _ref.widthProp,
      heightProp = _ref.heightProp,
      props = _objectWithoutProperties(_ref, ["commentIDProp", "showParrent", "widthProp", "heightProp"]);

  var _useOverrides = (0, _components.useOverrides)(props, overrides),
      override = _useOverrides.override,
      rest = _useOverrides.rest;

  return /*#__PURE__*/_react["default"].createElement(Wrapper, _extends({
    width: "100%"
  }, rest), commentIDProp ? /*#__PURE__*/_react["default"].createElement(Content, _extends({}, override('Disqus Content'), {
    display: !commentIDProp && 'none'
  }), /*#__PURE__*/_react["default"].createElement(_disqusReact.CommentEmbed, {
    commentId: commentIDProp,
    showParentComment: showParrent,
    width: widthProp,
    height: heightProp
  })) : /*#__PURE__*/_react["default"].createElement(_ComponentNotice["default"], {
    message: "Add your comment ID in the Props panel"
  }));
};

var propInfo = {
  commentIDProp: {
    title: {
      en: 'Comment identifier',
      ru: 'Идентификатор комментария'
    },
    control: 'input',
    type: 'text',
    weight: 1
  },
  showParrent: {
    title: {
      en: 'Show parent comment',
      ru: 'Показать родительский комментарий'
    },
    control: 'checkbox',
    type: 'text',
    weight: 1
  },
  widthProp: {
    title: {
      en: 'Comment block width',
      ru: 'Ширина блока с комментарием'
    },
    control: 'input',
    type: 'text',
    weight: 1
  },
  heightProp: {
    title: {
      en: 'Comment block height',
      ru: 'Высота блока с комментарием'
    },
    control: 'input',
    type: 'text',
    weight: 1
  }
};
var defaultProps = {
  commentIDProp: '',
  showParrent: false,
  widthProp: '100%',
  heightProp: '200px'
};
Object.assign(DisqusCommentComponent, {
  title: 'Disqus Comment',
  description: {
    en: 'This component allows you to add the Disqus widget with a specific comment',
    ru: 'Компонент для встраивания виджета с конкретным комментарием Disqus'
  },
  propInfo: propInfo,
  defaultProps: defaultProps,
  overrides: overrides
});
var _default = DisqusCommentComponent;
exports["default"] = _default;