"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactTextLoop = _interopRequireDefault(require("react-text-loop"));

var _components = require("@quarkly/components");

var _widgets = require("@quarkly/widgets");

var _props = require("./props");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var TextLoopComponent = function TextLoopComponent(_ref) {
  var slides = _ref.slides,
      intervalProp = _ref.intervalProp,
      delayProp = _ref.delayProp,
      adjustingSpeedProp = _ref.adjustingSpeedProp,
      fade = _ref.fade,
      mask = _ref.mask,
      noWrap = _ref.noWrap,
      props = _objectWithoutProperties(_ref, ["slides", "intervalProp", "delayProp", "adjustingSpeedProp", "fade", "mask", "noWrap"]);

  var _useOverrides = (0, _components.useOverrides)(props, _props.overrides),
      override = _useOverrides.override,
      rest = _useOverrides.rest;

  var list = slides.length > 0 ? slides.split(',').reverse() : [];
  var interval = (0, _react.useMemo)(function () {
    return parseInt(intervalProp, 10) || 3000;
  }, [intervalProp]);
  var delay = (0, _react.useMemo)(function () {
    return parseInt(delayProp, 10) || 0;
  }, [delayProp]);
  var adjustingSpeed = (0, _react.useMemo)(function () {
    return parseInt(adjustingSpeedProp, 10) || 150;
  }, [adjustingSpeedProp]);
  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    padding: "40px 0",
    font: "--headline2"
  }, rest), /*#__PURE__*/_react["default"].createElement(_widgets.Text, override('Before Text')), ' ', /*#__PURE__*/_react["default"].createElement(_widgets.Text, override('Looped Text'), /*#__PURE__*/_react["default"].createElement(_reactTextLoop["default"], {
    interval: interval,
    delay: delay,
    adjustingSpeed: adjustingSpeed,
    fade: fade,
    mask: mask,
    noWrap: noWrap
  }, list.map(function (item) {
    return /*#__PURE__*/_react["default"].createElement("span", {
      key: item
    }, item);
  }))), ' ', /*#__PURE__*/_react["default"].createElement(_widgets.Text, override('After Text')));
};

Object.assign(TextLoopComponent, {
  title: 'TextLoop',
  description: {
    en: 'This component allows to loop text in the header',
    ru: 'Зацикленная анимация смены текстовых слайдов для ваших заголовков'
  },
  propInfo: _props.propInfo,
  defaultProps: _props.defaultProps,
  overrides: _props.overrides
});
var _default = TextLoopComponent;
exports["default"] = _default;