"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactLivechat = _interopRequireDefault(require("react-livechat"));

var _widgets = require("@quarkly/widgets");

var _ComponentNotice = _interopRequireDefault(require("./ComponentNotice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var LiveChatComponent = function LiveChatComponent(_ref) {
  var license = _ref.license,
      group = _ref.group,
      chatBetweenGroups = _ref.chatBetweenGroups,
      props = _objectWithoutProperties(_ref, ["license", "group", "chatBetweenGroups"]);

  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, props, license ? /*#__PURE__*/_react["default"].createElement(_reactLivechat["default"], {
    license: license,
    group: group || '',
    chatBetweenGroups: chatBetweenGroups
  }) : /*#__PURE__*/_react["default"].createElement(_ComponentNotice["default"], {
    message: "Add your License ID in the Props panel"
  }));
};

var propInfo = {
  license: {
    title: {
      en: 'License ID',
      ru: 'ID лицензии'
    },
    control: 'input',
    type: 'number',
    category: 'Main',
    weight: 1
  },
  group: {
    title: {
      en: 'Group number',
      ru: 'Номер группы'
    },
    control: 'input',
    type: 'number',
    category: 'Main',
    weight: 1
  },
  chatBetweenGroups: {
    title: {
      en: 'Chat sessions between groups',
      ru: 'Сессии чатов между группами'
    },
    control: 'checkbox',
    category: 'Main',
    weight: 1
  }
};
var defaultProps = {
  chatBetweenGroups: false
};
Object.assign(LiveChatComponent, {
  title: 'LiveChat',
  description: {
    en: 'This component is for adding the LiveChat widget',
    ru: 'Компонент для добавления виджета LiveChat'
  },
  propInfo: propInfo,
  defaultProps: defaultProps
});
var _default = LiveChatComponent;
exports["default"] = _default;