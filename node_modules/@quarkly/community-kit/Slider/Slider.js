"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _widgets = require("@quarkly/widgets");

var _components = require("@quarkly/components");

var _utils = require("./utils");

var _useForceUpdate3 = _interopRequireDefault(require("./hooks/useForceUpdate"));

var _props = require("./props");

var _components2 = require("./components");

var _utils2 = require("../utils");

var _useFormField2 = _interopRequireDefault(require("../Form/hooks/useFormField"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Slider = function Slider(_ref) {
  var _getAPI;

  var name = _ref.name,
      vertical = _ref.vertical,
      minFromProps = _ref.min,
      maxFromProps = _ref.max,
      stepSizeFromProps = _ref.stepSize,
      labelStepSizeFromProps = _ref.labelStepSize,
      labelPrecisionFromProps = _ref.labelPrecision,
      labelValuesFromProps = _ref.labelValues,
      defaultValue = _ref.defaultValue,
      labelRenderer = _ref.labelRenderer,
      valueFromProps = _ref.value,
      onChangeFromProps = _ref.onChange,
      props = _objectWithoutProperties(_ref, ["name", "vertical", "min", "max", "stepSize", "labelStepSize", "labelPrecision", "labelValues", "defaultValue", "labelRenderer", "value", "onChange"]);

  var _useOverrides = (0, _components.useOverrides)(props, _props.overrides),
      override = _useOverrides.override,
      rest = _useOverrides.rest;

  var _useState = (0, _react.useState)(function () {
    return parseFloat(defaultValue);
  }),
      _useState2 = _slicedToArray(_useState, 2),
      innerValue = _useState2[0],
      setInnerValue = _useState2[1];

  var ref = (0, _react.useRef)();
  var railRef = (0, _react.useRef)();

  var _useFormField = (0, _useFormField2["default"])(name, {
    defaultValue: parseFloat(defaultValue)
  }),
      valueFromContext = _useFormField.value,
      changeValueFromContext = _useFormField.changeValue,
      isInForm = _useFormField.isInForm;

  var innerOnChange = (0, _react.useCallback)(function (value) {
    setInnerValue(value);
    changeValueFromContext === null || changeValueFromContext === void 0 ? void 0 : changeValueFromContext(value);
  }, [changeValueFromContext]);
  (0, _react.useEffect)(function () {
    if (isInForm) {
      setInnerValue(valueFromContext);
    }
  }, [valueFromContext, isInForm]);
  var isControlled = valueFromProps !== undefined;
  var value = isControlled ? valueFromProps : innerValue;
  var onChange = isControlled ? onChangeFromProps : innerOnChange;

  var _useForceUpdate = (0, _useForceUpdate3["default"])(),
      _useForceUpdate2 = _slicedToArray(_useForceUpdate, 2),
      forceUpdate = _useForceUpdate2[0],
      updated = _useForceUpdate2[1];

  (0, _react.useLayoutEffect)(function () {
    forceUpdate();
    return function () {
      resetListeners();
    };
  }, [forceUpdate, resetListeners, vertical]);

  var _useMemo = (0, _react.useMemo)(function () {
    return (0, _utils.validateProps)({
      minFromProps: minFromProps,
      maxFromProps: maxFromProps,
      stepSizeFromProps: stepSizeFromProps,
      labelStepSizeFromProps: labelStepSizeFromProps,
      labelPrecisionFromProps: labelPrecisionFromProps,
      labelValuesFromProps: labelValuesFromProps
    });
  }, [minFromProps, maxFromProps, stepSizeFromProps, labelStepSizeFromProps, labelPrecisionFromProps, labelValuesFromProps]),
      min = _useMemo.min,
      max = _useMemo.max,
      stepSize = _useMemo.stepSize,
      labelStepSize = _useMemo.labelStepSize,
      labelPrecision = _useMemo.labelPrecision,
      labelValues = _useMemo.labelValues;

  var tickSizeRatio = 1 / (max - min);
  var isDev = ((_getAPI = (0, _utils2.getAPI)()) === null || _getAPI === void 0 ? void 0 : _getAPI.mode) === 'development';
  (0, _react.useEffect)(function () {
    if (isDev) {
      var parsedValue = parseFloat(defaultValue);
      setInnerValue((0, _utils.clamp)(parsedValue, min, max));
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [defaultValue, isDev]);
  (0, _react.useEffect)(function () {
    if (value > max) {
      setInnerValue(max);
    }

    if (value < min) {
      setInnerValue(min);
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [max, min]);
  var valuePrecision = (0, _react.useMemo)(function () {
    return (0, _utils.countDecimalPlaces)(stepSize);
  }, [stepSize]);
  var changeValue = (0, _react.useCallback)(function (pixel) {
    var rect = railRef.current.getBoundingClientRect();
    var tickSize = (vertical ? rect.height : rect.width) * tickSizeRatio;
    var pixelData = vertical ? rect.bottom - pixel : pixel - rect.left;
    var rounded = (0, _utils.roundValue)(Math.round(pixelData / (tickSize * stepSize)) * stepSize + min, valuePrecision);
    var nextValue = (0, _utils.clamp)(rounded, min, max);
    onChange(nextValue);
  }, [max, min, onChange, stepSize, tickSizeRatio, valuePrecision, vertical]);
  var handleMouseEventOffset = (0, _react.useCallback)(function (e) {
    return vertical ? e.clientY : e.clientX;
  }, [vertical]);
  var handleTouchEventOffset = (0, _react.useCallback)(function (e) {
    var touch = e.changedTouches[0];
    return vertical ? touch.clientY : touch.clientX;
  }, [vertical]);
  var touchMove = (0, _react.useCallback)(function (e) {
    changeValue(handleTouchEventOffset(e));
  }, [changeValue, handleTouchEventOffset]);
  var mouseMove = (0, _react.useCallback)(function (e) {
    changeValue(handleMouseEventOffset(e));
  }, [changeValue, handleMouseEventOffset]);
  var resetListeners = (0, _react.useCallback)(function () {
    document.removeEventListener('mousemove', mouseMove);
    document.removeEventListener('touchmove', touchMove);
    document.removeEventListener('mouseup', mouseOrTouchUp);
    document.removeEventListener('touchend', mouseOrTouchUp);
  }, [mouseMove, touchMove, mouseOrTouchUp]);
  var mouseOrTouchUp = (0, _react.useCallback)(function () {
    resetListeners();
  }, [resetListeners]);
  var onMouseDown = (0, _react.useCallback)(function (e) {
    document.addEventListener('mousemove', mouseMove);
    document.addEventListener('mouseup', mouseOrTouchUp);
    mouseMove(e);
  }, [mouseMove, mouseOrTouchUp]);
  var onTouchStart = (0, _react.useCallback)(function (e) {
    document.addEventListener('touchmove', touchMove);
    document.addEventListener('touchend', mouseOrTouchUp);
    touchMove(e);
  }, [touchMove, mouseOrTouchUp]);
  var railFillStyle = (0, _react.useMemo)(function () {
    if (!updated) return {};
    var offsetRatio = (value - min) * tickSizeRatio;
    var offsetPercent = (0, _utils.formatPercentage)(offsetRatio);
    var side = vertical ? 'top' : 'right';
    return _objectSpread({
      style: _defineProperty({}, side, "calc(100% - ".concat(offsetPercent, ")"))
    }, vertical ? {
      height: 'auto',
      width: '100%',
      top: 0,
      bottom: 0
    } : {
      width: 'auto',
      height: '100%',
      left: 0,
      right: 0
    });
  }, [updated, value, min, tickSizeRatio, vertical]);
  var mainStyle = (0, _react.useMemo)(function () {
    return _objectSpread({
      display: 'inline-flex',
      'user-select': 'none',
      'min-width': 0,
      'min-height': 0,
      padding: '20px 30px 15px'
    }, vertical ? {
      'flex-direction': 'row',
      height: 200
    } : {
      'flex-direction': 'column',
      width: 200
    });
  }, [vertical]);
  var railStyle = (0, _react.useMemo)(function () {
    return vertical ? {
      height: '100%',
      width: 8
    } : {
      height: 8,
      width: '100%'
    };
  }, [vertical]);
  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    onMouseDown: onMouseDown,
    onTouchStart: onTouchStart
  }, mainStyle, rest), /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    ref: railRef
  }, railStyle, override('Slider Rail')), /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({}, railFillStyle, override('Slider Rail Fill'))), /*#__PURE__*/_react["default"].createElement(_components2.Handle, {
    ref: ref,
    name: name,
    vertical: vertical,
    min: min,
    max: max,
    stepSize: stepSize,
    tickSizeRatio: tickSizeRatio,
    labelPrecision: labelPrecision,
    labelRenderer: labelRenderer,
    value: value,
    onChange: onChange,
    override: override,
    updated: updated,
    valuePrecision: valuePrecision
  })), /*#__PURE__*/_react["default"].createElement(_components2.Labels, {
    vertical: vertical,
    min: min,
    max: max,
    stepSize: stepSize,
    labelValues: labelValues,
    labelStepSize: labelStepSize,
    labelPrecision: labelPrecision,
    labelRenderer: labelRenderer,
    override: override
  }));
};

Object.assign(Slider, {
  title: 'Slider',
  description: {
    en: 'Slider for choosing a number from the interval between the lower and upper boundaries.',
    ru: 'Ползунок для выбора числа из промежутка между нижней и верхней границами.'
  },
  propInfo: _props.propInfo,
  defaultProps: _props.defaultProps,
  overrides: _props.overrides
});
var _default = Slider;
exports["default"] = _default;