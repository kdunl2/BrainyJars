"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _components = require("@quarkly/components");

var _widgets = require("@quarkly/widgets");

var _props = require("./props");

var _ComponentNotice = _interopRequireDefault(require("../ComponentNotice"));

var _utils = require("../utils");

var _utils2 = require("./utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var MobileSidePanel = function MobileSidePanel(_ref) {
  var breakpoint = _ref.breakpoint,
      menuPosition = _ref.menuPosition,
      animDuration = _ref.animDuration,
      animFunction = _ref.animFunction,
      onloadShow = _ref.onloadShow,
      props = _objectWithoutProperties(_ref, ["breakpoint", "menuPosition", "animDuration", "animFunction", "onloadShow"]);

  var _useOverrides = (0, _components.useOverrides)(props, _props.overrides),
      override = _useOverrides.override,
      children = _useOverrides.children,
      rest = _useOverrides.rest;

  var _useState = (0, _react.useState)(onloadShow),
      _useState2 = _slicedToArray(_useState, 2),
      isOpen = _useState2[0],
      setOpen = _useState2[1];

  var isNear = (0, _react.useMemo)(function () {
    return menuPosition === 'near' || menuPosition === 'nearRight';
  }, [menuPosition]);
  var contentRef = (0, _react.useRef)();
  var openPanel = (0, _react.useCallback)(function () {
    contentRef.current.scrollTo(0, 0);

    _utils.toggleScroll.disable(contentRef.current);

    setOpen(true);
  }, []);
  var closePanel = (0, _react.useCallback)(function () {
    _utils.toggleScroll.enable(contentRef.current);

    setOpen(false);
  }, []);
  var togglePanel = (0, _react.useCallback)(function () {
    !isOpen ? openPanel() : closePanel();
  }, [isOpen, openPanel, closePanel]);
  (0, _react.useEffect)(function () {
    setOpen(isOpen || isEmpty);
  }, [setOpen, isOpen, isEmpty]);
  (0, _react.useEffect)(function () {
    setOpen(onloadShow);
  }, [onloadShow]);
  (0, _react.useEffect)(function () {
    return function () {
      closePanel();
    };
  }, [closePanel]);
  var isEmpty = (0, _react.useMemo)(function () {
    return (0, _utils.isEmptyChildren)(children);
  }, [children]);
  var styles = (0, _react.useMemo)(function () {
    return (0, _utils2.getStyles)({
      breakpoint: breakpoint,
      menuPosition: menuPosition,
      animDuration: animDuration,
      animFunction: animFunction,
      isNear: isNear
    });
  }, [breakpoint, menuPosition, animDuration, animFunction, isNear]);
  var statusOpen = isOpen || isEmpty ? ':open' : ':closed';
  var statusButtopenPanel = isNear && (isOpen || isEmpty) ? ':open' : ':closed';
  var context = (0, _react.useMemo)(function () {
    return {
      isOpen: isOpen,
      togglePanel: togglePanel,
      openPanel: openPanel,
      closePanel: closePanel
    };
  }, [isOpen, togglePanel, openPanel, closePanel]);
  return /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    flex: "1 1 auto",
    width: "100%",
    "min-width": "0px",
    "min-height": "0px",
    "align-items": "center",
    "justify-content": menuPosition === 'left' || menuPosition === 'nearRight' ? 'flex-start' : 'flex-end',
    position: "relative",
    display: "flex",
    "z-index": "5"
  }, rest), /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    onClick: isNear ? togglePanel : openPanel
  }, styles.Button, override('Button', "Button ".concat(statusButtopenPanel))), /*#__PURE__*/_react["default"].createElement(_widgets.Text, _extends({}, styles['Button Text'], override('Button Text', "Button Text ".concat(statusButtopenPanel)))), /*#__PURE__*/_react["default"].createElement(_widgets.Icon, override('Button Icon', "Button Icon ".concat(statusButtopenPanel)))), /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({}, styles.Wrapper, styles["Wrapper ".concat(statusOpen)], override('Wrapper', "Wrapper ".concat(statusOpen))), /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({
    onClick: closePanel
  }, styles.Overlay, styles["Overlay ".concat(statusOpen)], override('Overlay', "Overlay ".concat(statusOpen)))), /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({}, styles.Content, styles["Content ".concat(statusOpen)], override('Content', "Content ".concat(statusOpen)), {
    ref: contentRef
  }), /*#__PURE__*/_react["default"].createElement(_widgets.Icon, _extends({
    onClick: closePanel
  }, styles.Cross, override('Cross'))), /*#__PURE__*/_react["default"].createElement(_utils2.MobileSidePanelContext.Provider, {
    value: context
  }, /*#__PURE__*/_react["default"].createElement(_widgets.Box, _extends({}, styles.Children, override('Children', "Children ".concat(statusOpen)), {
    display: isEmpty ? 'none' : undefined
  }), children)), isEmpty && /*#__PURE__*/_react["default"].createElement(_ComponentNotice["default"], {
    message: "Drag any component here"
  }))));
};

Object.assign(MobileSidePanel, {
  title: 'Mobile side panel',
  description: {
    en: 'Container to hide menu or any other content in the mobile version of the site',
    ru: 'Контейнер для скрытия меню или любого другого контента в мобильной версии сайта'
  },
  propInfo: _props.propInfo,
  defaultProps: _props.defaultProps,
  overrides: _props.overrides
});
var _default = MobileSidePanel;
exports["default"] = _default;