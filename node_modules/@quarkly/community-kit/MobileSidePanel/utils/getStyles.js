"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _getContentStyles = _interopRequireDefault(require("./getContentStyles"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Get all styles by properties
var getStyles = function getStyles(_ref) {
  var _Button, _Wrapper, _WrapperOpen, _WrapperClosed, _Overlay, _OverlayOpen, _OverlayClosed;

  var breakpoint = _ref.breakpoint,
      menuPosition = _ref.menuPosition,
      animDuration = _ref.animDuration,
      animFunction = _ref.animFunction,
      isNear = _ref.isNear;
  var breakpointModifier = breakpoint !== 'all' ? "".concat(breakpoint, "-") : '';
  return {
    Button: (_Button = {
      'padding-right': '3px',
      'min-height': '0',
      'align-items': 'center',
      'flex-direction': menuPosition === 'left' || menuPosition === 'nearRight' ? 'row-reverse' : 'row',
      position: 'relative',
      cursor: 'pointer',
      display: 'none'
    }, _defineProperty(_Button, "".concat(breakpointModifier, "display"), 'inline-flex'), _defineProperty(_Button, "".concat(breakpointModifier, "flex"), '0 0 auto'), _defineProperty(_Button, "".concat(breakpointModifier, "z-index"), isNear ? '2' : '1'), _Button),
    'Button Text': {
      margin: '0 .35em 0 0',
      'font-size': '14px',
      'user-select': 'none'
    },
    Wrapper: (_Wrapper = {
      width: '100%',
      height: '100%',
      position: 'relative',
      display: 'flex',
      'z-index': '1'
    }, _defineProperty(_Wrapper, "".concat(breakpointModifier, "top"), '0'), _defineProperty(_Wrapper, "".concat(breakpointModifier, "left"), '0'), _defineProperty(_Wrapper, "".concat(breakpointModifier, "position"), isNear ? 'absolute' : 'fixed'), _Wrapper),
    'Wrapper :open': (_WrapperOpen = {}, _defineProperty(_WrapperOpen, "".concat(breakpointModifier, "transition"), "visibility ".concat(animDuration, " step-start")), _defineProperty(_WrapperOpen, "".concat(breakpointModifier, "visibility"), 'visible'), _WrapperOpen),
    'Wrapper :closed': (_WrapperClosed = {}, _defineProperty(_WrapperClosed, "".concat(breakpointModifier, "transition"), "visibility ".concat(animDuration, " step-end")), _defineProperty(_WrapperClosed, "".concat(breakpointModifier, "visibility"), 'hidden'), _WrapperClosed),
    Overlay: (_Overlay = {
      width: '100%',
      height: '100%',
      'background-color': isNear ? 'transparent' : 'rgba(0,0,0, .5)',
      position: 'relative',
      display: 'none',
      'z-index': '1'
    }, _defineProperty(_Overlay, "".concat(breakpointModifier, "top"), '0'), _defineProperty(_Overlay, "".concat(breakpointModifier, "left"), '0'), _defineProperty(_Overlay, "".concat(breakpointModifier, "position"), 'fixed'), _defineProperty(_Overlay, "".concat(breakpointModifier, "display"), 'block'), _Overlay),
    'Overlay :open': (_OverlayOpen = {}, _defineProperty(_OverlayOpen, "".concat(breakpointModifier, "transition"), "\n      visibility ".concat(animDuration, " step-start,\n      opacity ").concat(animDuration, " ").concat(animFunction, "\n    ")), _defineProperty(_OverlayOpen, "".concat(breakpointModifier, "visibility"), 'visible'), _defineProperty(_OverlayOpen, "".concat(breakpointModifier, "opacity"), '1'), _OverlayOpen),
    'Overlay :closed': (_OverlayClosed = {}, _defineProperty(_OverlayClosed, "".concat(breakpointModifier, "transition"), "\n      visibility ".concat(animDuration, " step-end,\n      opacity ").concat(animDuration, " ").concat(animFunction, "\n    ")), _defineProperty(_OverlayClosed, "".concat(breakpointModifier, "visibility"), 'hidden'), _defineProperty(_OverlayClosed, "".concat(breakpointModifier, "opacity"), '0'), _OverlayClosed),
    Content: _objectSpread({
      'max-width': '100vw',
      'max-height': '100vh',
      'background-color': 'white',
      'box-sizing': 'border-box',
      display: 'flex',
      'z-index': '2'
    }, (0, _getContentStyles["default"])({
      breakpointModifier: breakpointModifier,
      menuPosition: menuPosition,
      animDuration: animDuration,
      animFunction: animFunction,
      isNear: isNear
    }).normal),
    'Content :open': _objectSpread({}, (0, _getContentStyles["default"])({
      breakpointModifier: breakpointModifier,
      menuPosition: menuPosition,
      animDuration: animDuration,
      animFunction: animFunction,
      isNear: isNear
    }).open),
    'Content :closed': _objectSpread({}, (0, _getContentStyles["default"])({
      breakpointModifier: breakpointModifier,
      menuPosition: menuPosition,
      animDuration: animDuration,
      animFunction: animFunction,
      isNear: isNear
    }).closed),
    Children: {
      width: '100%'
    },
    Cross: _defineProperty({
      top: '16px',
      right: '16px',
      position: 'absolute',
      cursor: 'pointer',
      display: 'none'
    }, "".concat(breakpointModifier, "display"), isNear ? 'none' : 'block')
  };
};

var _default = getStyles;
exports["default"] = _default;