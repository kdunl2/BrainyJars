"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Design styles differ 50/50
// Brought out separately, so that there is less duplication
var getContentStyles = function getContentStyles(_ref) {
  var _baseStyles, _open, _closed, _objectSpread2, _objectSpread3, _objectSpread6, _objectSpread7;

  var breakpointModifier = _ref.breakpointModifier,
      menuPosition = _ref.menuPosition,
      animDuration = _ref.animDuration,
      animFunction = _ref.animFunction,
      isNear = _ref.isNear;
  var baseStyles = (_baseStyles = {
    padding: isNear ? '16px' : '48px 16px 24px',
    width: '100%',
    'overflow-x': 'hidden',
    'overflow-y': 'auto',
    'align-items': 'center',
    'justify-content': 'space-between',
    'flex-direction': 'row'
  }, _defineProperty(_baseStyles, "".concat(breakpointModifier, "width"), 'initial'), _defineProperty(_baseStyles, "".concat(breakpointModifier, "min-width"), '280px'), _defineProperty(_baseStyles, "".concat(breakpointModifier, "min-height"), '32px'), _defineProperty(_baseStyles, "".concat(breakpointModifier, "align-items"), 'flex-start'), _defineProperty(_baseStyles, "".concat(breakpointModifier, "flex-direction"), 'column'), _defineProperty(_baseStyles, "".concat(breakpointModifier, "box-shadow"), '--xxl'), _baseStyles);
  var animStyles = {
    appear: {
      open: (_open = {}, _defineProperty(_open, "".concat(breakpointModifier, "transition"), "\n\t\t\t\t\tvisibility ".concat(animDuration, " step-start,\n\t\t\t\t\topacity ").concat(animDuration, " ").concat(animFunction, "\n\t\t\t\t")), _defineProperty(_open, "".concat(breakpointModifier, "visibility"), 'visible'), _defineProperty(_open, "".concat(breakpointModifier, "opacity"), '1'), _open),
      closed: (_closed = {}, _defineProperty(_closed, "".concat(breakpointModifier, "transition"), "\n\t\t\t\t\tvisibility ".concat(animDuration, " step-end,\n\t\t\t\t\topacity ").concat(animDuration, " ").concat(animFunction, "\n\t\t\t\t")), _defineProperty(_closed, "".concat(breakpointModifier, "visibility"), 'hidden'), _defineProperty(_closed, "".concat(breakpointModifier, "opacity"), '0'), _closed)
    },
    shift: {
      base: _defineProperty({}, "".concat(breakpointModifier, "transition"), "\n\t\t\t\t\ttransform ".concat(animDuration, " ").concat(animFunction, "\n\t\t\t\t"))
    }
  };

  switch (menuPosition) {
    case 'full':
      return {
        normal: _objectSpread(_objectSpread({}, baseStyles), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, "".concat(breakpointModifier, "top"), '0'), _defineProperty(_objectSpread2, "".concat(breakpointModifier, "left"), '0'), _defineProperty(_objectSpread2, "".concat(breakpointModifier, "width"), '100%'), _defineProperty(_objectSpread2, "".concat(breakpointModifier, "height"), '100%'), _defineProperty(_objectSpread2, "".concat(breakpointModifier, "position"), 'fixed'), _objectSpread2)),
        open: animStyles.appear.open,
        closed: animStyles.appear.closed
      };

    case 'left':
    case 'right':
      return {
        normal: _objectSpread(_objectSpread({}, baseStyles), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, "".concat(breakpointModifier, "top"), '0'), _defineProperty(_objectSpread3, "".concat(breakpointModifier).concat(menuPosition === 'left' ? 'right' : 'left'), '100%'), _defineProperty(_objectSpread3, "".concat(breakpointModifier, "padding-top"), '38px'), _defineProperty(_objectSpread3, "".concat(breakpointModifier, "width"), '280px'), _defineProperty(_objectSpread3, "".concat(breakpointModifier, "height"), '100%'), _defineProperty(_objectSpread3, "".concat(breakpointModifier, "position"), 'fixed'), _objectSpread3)),
        closed: _objectSpread(_objectSpread({}, animStyles.shift.base), {}, _defineProperty({}, "".concat(breakpointModifier, "transform"), 'translateX(0)')),
        open: _objectSpread(_objectSpread({}, animStyles.shift.base), {}, _defineProperty({}, "".concat(breakpointModifier, "transform"), "translateX(".concat(menuPosition === 'left' ? '100%' : '-100%', ")")))
      };

    case 'near':
      return {
        normal: _objectSpread(_objectSpread({}, baseStyles), {}, (_objectSpread6 = {}, _defineProperty(_objectSpread6, "".concat(breakpointModifier, "top"), '100%'), _defineProperty(_objectSpread6, "".concat(breakpointModifier, "right"), '0'), _defineProperty(_objectSpread6, "".concat(breakpointModifier, "position"), 'absolute'), _objectSpread6)),
        open: animStyles.appear.open,
        closed: animStyles.appear.closed
      };

    case 'nearRight':
      return {
        normal: _objectSpread(_objectSpread({}, baseStyles), {}, (_objectSpread7 = {}, _defineProperty(_objectSpread7, "".concat(breakpointModifier, "top"), '100%'), _defineProperty(_objectSpread7, "".concat(breakpointModifier, "left"), '0'), _defineProperty(_objectSpread7, "".concat(breakpointModifier, "position"), 'absolute'), _objectSpread7)),
        open: animStyles.appear.open,
        closed: animStyles.appear.closed
      };

    default:
      return {};
  }
};

var _default = getContentStyles;
exports["default"] = _default;