"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _atomize = _interopRequireDefault(require("@quarkly/atomize"));

var _components = require("@quarkly/components");

var _ComponentNotice = _interopRequireDefault(require("./ComponentNotice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var overrides = {
  'Audio Tag': {
    kind: 'Audio Tag',
    props: {
      width: '100%',
      height: '0px',
      'min-height': '48px'
    }
  }
};

var Audio = _atomize["default"].audio();

var Wrapper = _atomize["default"].div();

var Content = _atomize["default"].div();

var AudioComponent = function AudioComponent(_ref) {
  var src = _ref.src,
      autoPlay = _ref.autoPlay,
      controls = _ref.controls,
      muted = _ref.muted,
      loop = _ref.loop,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ["src", "autoPlay", "controls", "muted", "loop", "children"]);

  var _useOverrides = (0, _components.useOverrides)(props, overrides),
      override = _useOverrides.override,
      rest = _useOverrides.rest;

  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      isEmpty = _useState2[0],
      setEmpty = _useState2[1];

  var contentRef = (0, _react.useRef)(null);
  var srcVal = (0, _react.useMemo)(function () {
    return src.trim();
  }, [src]);
  var showNotice = (0, _react.useMemo)(function () {
    return isEmpty && !srcVal;
  }, [isEmpty, srcVal]);
  (0, _react.useEffect)(function () {
    var _contentRef$current;

    setEmpty(((_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 ? void 0 : _contentRef$current.innerHTML) === '<!--child placeholder-->');
  }, [children]);
  return /*#__PURE__*/_react["default"].createElement(Wrapper, _extends({
    display: "flex"
  }, rest), /*#__PURE__*/_react["default"].createElement(Audio, _extends({
    src: srcVal,
    autoPlay: autoPlay,
    controls: controls,
    muted: muted,
    loop: loop
  }, override('Audio Tag'), {
    display: showNotice && 'none'
  }), /*#__PURE__*/_react["default"].createElement(Content, {
    ref: contentRef
  }, _react["default"].Children.map(children, function (child) {
    return /*#__PURE__*/_react["default"].isValidElement(child) && /*#__PURE__*/_react["default"].cloneElement(child, {
      container: 'audio'
    });
  }))), showNotice && /*#__PURE__*/_react["default"].createElement(_ComponentNotice["default"], {
    message: 'Add the SRC property or add the Source component here'
  }));
};

var propInfo = {
  src: {
    title: {
      en: 'Link to audio file',
      ru: 'Ссылка на аудио-файл'
    },
    control: 'input',
    type: 'text',
    category: 'Main',
    weight: 1
  },
  autoPlay: {
    title: {
      en: 'Auto playback',
      ru: 'Автоматическое воспроизведение'
    },
    control: 'checkbox',
    category: 'Main',
    weight: 1
  },
  controls: {
    title: {
      en: 'Show controls',
      ru: 'Показывать элементы управления'
    },
    control: 'checkbox',
    category: 'Main',
    weight: 1
  },
  muted: {
    title: {
      en: 'Sound off',
      ru: 'Отключить звук'
    },
    control: 'checkbox',
    category: 'Main',
    weight: 0.5
  },
  loop: {
    title: {
      en: 'Loop playback',
      ru: 'Зациклить воспроизведение'
    },
    control: 'checkbox',
    category: 'Main',
    weight: 0.5
  }
};
var defaultProps = {
  src: '',
  controls: true
};

var _default = (0, _atomize["default"])(AudioComponent)({
  name: 'Audio',
  description: {
    en: 'Container for embedding audio content',
    ru: 'Контейнер для встраивания аудио контента'
  },
  propInfo: propInfo,
  overrides: overrides
}, defaultProps);

exports["default"] = _default;