"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _atomize = _interopRequireDefault(require("@quarkly/atomize"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _presets = _interopRequireDefault(require("./presets"));

var _props = require("./props");

var _ComponentNotice = _interopRequireDefault(require("../ComponentNotice"));

var _utils = require("../utils");

var _templateObject, _templateObject2;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var getAnimationStyle = function getAnimationStyle(_ref) {
  var animation = _ref.animation,
      timingFunction = _ref.timingFunction,
      duration = _ref.duration,
      delay = _ref.delay,
      iteration = _ref.iteration;
  return (0, _styledComponents.css)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n        ", " ", " ", " ", " ", " normal forwards\n    "])), _presets["default"][animation].keyframes, duration, timingFunction || _presets["default"][animation].timingFunction, delay, iteration === 'infinite' && 'infinite');
};

var getParams = function getParams(e, currentElement) {
  var currentTarget = e ? e.currentTarget : window;
  var windowHeight = currentTarget.innerHeight;
  var componentRect = currentElement.getBoundingClientRect();
  var scrollBottom = currentElement.previousTop > componentRect.top;
  return {
    windowHeight: windowHeight,
    componentRect: componentRect,
    scrollBottom: scrollBottom
  };
};

var Wrapper = _atomize["default"].div();

var Content = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  animation: ", ";\n"])), getAnimationStyle);

var Animation = function Animation(_ref2) {
  var trigger = _ref2.trigger,
      animation = _ref2.animation,
      iteration = _ref2.iteration,
      timingFunction = _ref2.timingFunction,
      duration = _ref2.duration,
      delay = _ref2.delay,
      test = _ref2.test,
      children = _ref2.children,
      props = _objectWithoutProperties(_ref2, ["trigger", "animation", "iteration", "timingFunction", "duration", "delay", "test", "children"]);

  var _useState = (0, _react.useState)(trigger === 'onload' || test),
      _useState2 = _slicedToArray(_useState, 2),
      isPlay = _useState2[0],
      togglePlay = _useState2[1];

  var isEmpty = (0, _react.useMemo)(function () {
    return (0, _utils.isEmptyChildren)(children);
  }, [children]);
  var wrapperRef = (0, _react.useRef)({});
  var onEnterEvent = (0, _react.useMemo)(function () {
    return trigger === 'hover' ? function () {
      return togglePlay(true);
    } : undefined;
  }, [trigger]);
  var onLeaveEvent = (0, _react.useMemo)(function () {
    return trigger === 'hover' ? function () {
      return togglePlay(false);
    } : undefined;
  }, [trigger]);
  var onClickEvent = (0, _react.useMemo)(function () {
    return trigger === 'click' ? function () {
      return togglePlay(function (play) {
        return !play;
      });
    } : undefined;
  }, [trigger]);
  var onAboveEvent = (0, _react.useCallback)(function (e) {
    if (!wrapperRef.current) return;

    var _getParams = getParams(e, wrapperRef.current),
        componentRect = _getParams.componentRect,
        scrollBottom = _getParams.scrollBottom;

    if (!wrapperRef.current.trigered && !scrollBottom && componentRect.top + componentRect.height >= 0 && wrapperRef.current.previousTop + componentRect.height < 0) {
      wrapperRef.current.trigered = true;
      togglePlay(true);
    }

    wrapperRef.current.previousTop = componentRect.top;
  }, []);
  var onBelowEvent = (0, _react.useCallback)(function (e) {
    if (!wrapperRef.current) return;

    var _getParams2 = getParams(e, wrapperRef.current),
        windowHeight = _getParams2.windowHeight,
        componentRect = _getParams2.componentRect,
        scrollBottom = _getParams2.scrollBottom;

    if (!wrapperRef.current.trigered && scrollBottom && componentRect.top <= windowHeight && wrapperRef.current.previousTop > windowHeight) {
      wrapperRef.current.trigered = true;
      togglePlay(true);
    }

    wrapperRef.current.previousTop = componentRect.top;
  }, []);
  (0, _react.useEffect)(function () {
    if (!wrapperRef.current || trigger !== 'above' && trigger !== 'below' || test) return;

    var _getParams3 = getParams(null, wrapperRef.current),
        windowHeight = _getParams3.windowHeight,
        componentRect = _getParams3.componentRect;

    if (!(componentRect.top >= 0 && componentRect.top <= windowHeight)) {
      wrapperRef.current.previousTop = componentRect.top;

      if (trigger === 'above') {
        window.addEventListener('scroll', onAboveEvent);
      } else if (trigger === 'below') {
        window.addEventListener('scroll', onBelowEvent);
      }
    }

    return function cleanup() {
      window.removeEventListener('scroll', onAboveEvent);
      window.removeEventListener('scroll', onBelowEvent);
    };
  }, [trigger, test, onAboveEvent, onBelowEvent]);
  (0, _react.useEffect)(function () {
    togglePlay(trigger === 'onload' || test);
  }, [trigger, test]);
  return /*#__PURE__*/_react["default"].createElement(Wrapper, _extends({
    ref: wrapperRef,
    onMouseEnter: onEnterEvent,
    onMouseLeave: onLeaveEvent,
    onClick: onClickEvent
  }, props), /*#__PURE__*/_react["default"].createElement(Content, {
    animation: isPlay ? animation : 'none',
    iteration: iteration,
    timingFunction: timingFunction,
    duration: duration,
    delay: delay
  }, children), isEmpty && /*#__PURE__*/_react["default"].createElement(_ComponentNotice["default"], {
    message: "Add child component to make animation work"
  }));
};

Object.assign(Animation, {
  title: 'Animation',
  description: {
    en: 'Use this component to animate one or several elements',
    ru: 'Компонент для анимирования одного или нескольких элементов'
  },
  propInfo: _props.propInfo,
  defaultProps: _props.defaultProps
});
var _default = Animation;
exports["default"] = _default;